(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     65623,       2486]
NotebookOptionsPosition[     50958,       1977]
NotebookOutlinePosition[     51722,       2003]
CellTagsIndexPosition[     51679,       2000]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Examples of Logic Programs", "Title",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["by Roman E. Maeder", "Subsubtitle",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["This Notebook contains the sample queries Chapter 2.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
UPDATED TO INCLUDE MATERIAL FROM http://rebcabin.wordpress.com\
\>", "Subtitle",
 CellChangeTimes->{{3.5547573714984694`*^9, 3.554757391592469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["23 Aug 2012", "Text",
 CellChangeTimes->{{3.554757395823469*^9, 3.554757399839469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell["Reference", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Title", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Examples of Logic Programs", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Roman E. Maeder", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Examples from the second column on logic programming. It uses the query \
evaluator developed in the first column to give examples of typical logic \
programming applications.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Version", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["1.2", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copyright", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["\[Copyright]",
  FontFamily->"Symbol"],
 " Copyright 1994, Roman E. Maeder.\n\nPermission is granted to distribute \
this file for any purpose except for inclusion in commercial software or \
program collections. This copyright notice must remain intact.."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["History", "Subsubsection"],

Cell[TextData[{
 "Version 1.2 for ",
 StyleBox["The Mathematica Programmer II",
  FontSlant->"Italic"],
 ", March 1996."
}], "Text"],

Cell[TextData[{
 "Version 1.0 for ",
 StyleBox["The Mathematica Journal ",
  FontSlant->"Italic"],
 StyleBox["4",
  FontWeight->"Bold"],
 "(1)."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Prolog, logic programming, lists, nondeterminism, finite automata, FSA, \
backtracking, NIM, games, theorem proving, predicate calculus, Horn clauses, \
satisfiability, expert systems, artificial intelligence, dinosaurs.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "    Maeder, Roman E.. 1994. Logic Programming II. ",
 StyleBox["The Mathematica Journal",
  FontSlant->"Italic"],
 ", ",
 StyleBox["4",
  FontWeight->"Bold"],
 "(2)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Version"
}], "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["3.0", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Updated to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " version 8.0.4 by ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ", 23 Aug 2012."
}], "Text",
 CellChangeTimes->{{3.554757416127469*^9, 3.554757440844469*^9}, {
  3.554757915615469*^9, 3.5547579398854694`*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Requirements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`LogicProgramming`*)", "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.554757998626469*^9, 3.5547580038734694`*^9}},
 AspectRatioFixed->True],

Cell[TextData[{
 "Requires ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote]s updated LOGICPROGRAMMING.M, or, just search for \
\[OpenCurlyDoubleQuote]closed world\[CloseCurlyDoubleQuote] and fix the \
following in the original (it\[CloseCurlyQuote]s a one-line fix)"
}], "Text",
 CellChangeTimes->{{3.554757446541469*^9, 3.554757470883469*^9}, {
  3.5547578647794695`*^9, 3.5547578691044693`*^9}, {3.554757952575469*^9, 
  3.554757963509469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["\<\
(* closed world *)

(* rebcabin 23 Aug 2012: The following line is reordered in recent versions \
of Mathematica *)
(* and will come before the meaty rules above.  Most queries will get a bogus \
 *)
(* \[OpenCurlyDoubleQuote]no\[CloseCurlyDoubleQuote].  It seems that \
commenting this out suffices to fix the problem. *)
(* qeval[ _, initialState ] := no *)\
\>", "Text",
 CellChangeTimes->{3.554757540101469*^9},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["Indirect through the above:", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`Unify`*)", "Input",
 CellChangeTimes->{{3.5547574825914693`*^9, 3.5547575000784693`*^9}},
 AspectRatioFixed->True],

Cell["(*MathProg`Lisp`*)", "Input",
 CellChangeTimes->{{3.5547574857414694`*^9, 3.5547575018264694`*^9}},
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This section contains commands needed to load the corresponding package.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Search Path", "Subsection"],

Cell[TextData[{
 "Make sure that the directory containing the packages is on the search path, \
see the README document and the introduction in ",
 StyleBox["The ",
  FontSlant->"Italic"],
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 StyleBox[" Programmer",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[TextData[{
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ": a good place to put it in Windows is \
%USERPROFILE%\\AppData\\Roaming\\Mathematica\\Applications. On the mac, in \
~/Library/",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "/Applications. Put the entire MATHPROG folder in the Applications folder."
}], "Text",
 CellChangeTimes->{{3.554757614837469*^9, 3.5547576269724693`*^9}, {
  3.554757745567469*^9, 3.554757815547469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imports", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The code is contained in the following packages, which are simply read in \
here. The other packages listed in the requirements are read in indirectly \
from ",
 StyleBox["LogicProgramming.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["Needs[\"MathProg`LogicProgramming`\"]", "Input",
 InitializationCell->True,
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists in Prolog", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["Lists.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Ordering of Elements", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ ordered[list[]] ]
Assert[ ordered[list[_]] ]
Assert[ ordered[cons[e_, r_]], e_ < car[r_], ordered[r_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Lists", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ join[ nil, l_, l_ ] ]
Assert[ join[ cons[e_, r_], l_, cons[e_, s_] ], join[ r_, l_, s_ ] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query computes the join of ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["(c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ``returns'' the result as a binding for the one variable present."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], list[c, d], res_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"res", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
      " "], ")"],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.554756048455426*^9, 3.554756132727426*^9, 
  3.554756213990426*^9, 3.554758652909115*^9}]
}, Open  ]],

Cell[TextData[{
 "This query asks the question: ``which list, when joined to ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", gives ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "?''"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"l2", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`c, $CellContext`d}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.554756050414426*^9, 3.5547561327574263`*^9, 
  3.554756214024426*^9, 3.554758652938118*^9}]
}, Open  ]],

Cell[TextData[{
 "This query finds all possible ways to join two lists to give ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ join[l1_, l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", "\<\"()\"\>"}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756063337426*^9, 3.5547561327904263`*^9, 
  3.554756214069426*^9, 3.5547586529661207`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "a", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`a, ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756063337426*^9, 3.5547561327904263`*^9, 
  3.554756214069426*^9, 3.5547586529681206`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b"}],
       Infix[{$CellContext`a, $CellContext`b}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756063337426*^9, 3.5547561327904263`*^9, 
  3.554756214069426*^9, 3.5547586529721212`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "d", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`d, ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756063337426*^9, 3.5547561327904263`*^9, 
  3.554756214069426*^9, 3.5547586529751215`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", "\<\"()\"\>"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756063337426*^9, 3.5547561327904263`*^9, 
  3.554756214069426*^9, 3.554758652977122*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Membership Tests", "Subsection",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["First Attempt", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member[e_, cons[e_, _]] ]
Assert[ member[e_, cons[_, r_]], member[e_, r_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "We find that ",
 StyleBox["a",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is indeed a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[a, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output",
 CellChangeTimes->{3.554756133079426*^9, 3.554756214134426*^9, 
  3.554758653018126*^9}]
}, Open  ]],

Cell[TextData[{
 "It should no longer come as a surprise that we can invert the question to \
find an element that is a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.554756133108426*^9, 3.5547562141664257`*^9, 
  3.554758653050129*^9}]
}, Open  ]],

Cell["\<\
Our program has a bug: elements that occur more than once are listed more \
than once.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133137426*^9, 3.554756214197426*^9, 
  3.5547586530781317`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133137426*^9, 3.554756214197426*^9, 
  3.554758653080132*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133137426*^9, 3.554756214197426*^9, 
  3.5547586530831327`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133137426*^9, 3.554756214197426*^9, 
  3.554758653086133*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unique Elements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member2[x_, cons[x_, l_]] ]
Assert[ member2[x_, cons[y_, l_]], member2[x_, l_], x_ != y_ ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Each element appearing is now listed only once.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member2[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133194426*^9, 3.5547562142574263`*^9, 
  3.5547586531301374`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133194426*^9, 3.5547562142574263`*^9, 
  3.5547586531321373`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133194426*^9, 3.5547562142574263`*^9, 
  3.5547586531351376`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simpler, but non-invertible Solution", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
If we give up the requirement that our code works both ways, we can find a \
simpler definition for testing membership using a cut as soon as an element \
has been found.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member1[x_, cons[x_, l_]], cut ]
Assert[ member1[x_, cons[_, l_]], member1[x_, l_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nondeterministic Automata", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["FSA.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Automaton Simulation", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Evaluate this cell before trying out the exaple below.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ accepts[s_, nil], final[s_] ];
Assert[ accepts[s_, cons[x_, rest_]],
\ttrans[s_, x_, s1_], accepts[s1_, rest_] ];
Assert[ accepts[s_, input_],
\tsilent[s_, s1_], accepts[s1_, input_] ];\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["An Example Automaton.", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ final[s3] ];

Assert[ trans[s1, a, s1] ];
Assert[ trans[s1, a, s2] ];
Assert[ trans[s1, b, s1] ];
Assert[ trans[s2, b, s3] ];
Assert[ trans[s3, b, s4] ];

Assert[ silent[s2, s4] ];
Assert[ silent[s3, s1] ];\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query shows that the input ",
 StyleBox["aaab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ accepts[s1, list[a, a, a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output",
 CellChangeTimes->{3.5547561332694263`*^9, 3.554756214329426*^9, 
  3.554758653203144*^9}]
}, Open  ]],

Cell[TextData[{
 "Here, we find all states from which the input ",
 StyleBox["ab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s_, list[a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s1"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133299426*^9, 3.5547562143684263`*^9, 
  3.554758653237148*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s3"}], "}"}]], "Print",
 CellChangeTimes->{3.554756133299426*^9, 3.5547562143684263`*^9, 
  3.55475865325915*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Here are all inputs of length three that are accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s1, list[x1_, x2_, x3_]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "a"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133341426*^9, 3.5547562144154263`*^9, 
  3.5547586532921534`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "b"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133341426*^9, 3.5547562144154263`*^9, 
  3.5547586533141556`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
If we want to see the accepting inputs as lists, we can do it in this way.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ input_ == list[_, _, _], accepts[s1, input_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133393426*^9, 3.554756214471426*^9, 
  3.5547586533451586`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"b", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133393426*^9, 3.554756214471426*^9, 
  3.5547586533681607`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Backtracking and Exhaustive Search", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["NIM.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Rules of the Game", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["We can win if the opponent cannot win after our move.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ win[pos_, t_],  play[pos_, t_, p1_], !win[p1_, _] ]", "Input",
 AspectRatioFixed->True],

Cell["Generation/Execution of moves.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Take all.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ play[ cons[n_, rest_], take[1, n_], rest_ ] ]", "Input",
 AspectRatioFixed->True],

Cell["Take one.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, 1], cons[n1_, rest_]],
\tn_ > 1, n1_ == n_ - 1 ] \
\>", "Input",
 AspectRatioFixed->True],

Cell["One more than a move with smaller heap.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, m_], cons[nr_, rest_]],
        n_ > 2, n1_ == n_-1,
        play[cons[n1_, rest_], take[1, m1_], cons[nr_, rest_]],
        m_ == m1_+1 ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Move in rest of heaps.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[i_, m_], cons[n_, rest1_]],
        play[rest_, take[j_, m_], rest1_], i_ == j_+1 ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Plays", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This performs a move by figuring out the position after the move.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[3, 4, 5], take[1, 2], p1_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"p1", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"1", "\<\" \"\>", "4", "\<\" \"\>", "5"}],
      Infix[{1, 4, 5}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{1, 4, 5}, " "], ")"],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.5547561334894257`*^9, 3.554756214590426*^9, 
  3.554758653444168*^9}]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all possible moves from position~",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and the resulting positions after the move."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2], t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "2", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 2, ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133520426*^9, 3.554756214621426*^9, 
  3.5547586534741716`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "1", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 1, ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133520426*^9, 3.554756214621426*^9, 
  3.5547586534761715`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133520426*^9, 3.554756214621426*^9, 
  3.5547586534791718`*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Or we can ask for the move that transforms ",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " into ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[1, 2], t_, list[2]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.554756133558426*^9, 3.5547562146584263`*^9, 
  3.554758653512175*^9}]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all moves from ",
 StyleBox["(1 2 3)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that do not remove one of the heaps completely (we ask that the new \
position still has three heaps)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2, 3], t_, list[_, _, _]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133589426*^9, 3.554756214689426*^9, 
  3.554758653541178*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133589426*^9, 3.554756214689426*^9, 
  3.5547586535431786`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554756133589426*^9, 3.554756214689426*^9, 
  3.5547586535451784`*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "There is no move from the empty position. There is no rule expressing this \
fact, but you can check that all rules for ",
 StyleBox["play",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " require the initial position to be nonempty, since it is a pattern \
involving ",
 StyleBox["cons",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[nil, t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.554756133631426*^9, 3.554756214726426*^9, 
  3.554758653578182*^9}]
}, Open  ]],

Cell[TextData[{
 "This shows that we can win from position ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " by taking all chips."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[2], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5547561336654263`*^9, 3.5547562147584257`*^9, 
  3.554758653608185*^9}]
}, Open  ]],

Cell[TextData[{
 "The position ",
 StyleBox["(1 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is ",
 StyleBox["winning position",
  FontSlant->"Italic"],
 ", that is, if it is our turn we ",
 StyleBox["lose",
  FontSlant->"Italic"],
 " if the opponent plays correctly."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[1, 1], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.554756133748426*^9, 3.5547562147904263`*^9, 
  3.554758653638188*^9}]
}, Open  ]],

Cell[TextData[{
 "This query computes the winning move and the resulting position from \
position ",
 StyleBox["(1 2 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Query[ pos_==list[1,2,1],
       win[pos_, t_],
       play[pos_, t_, newpos_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "2", "\<\" \"\>", "1"}],
       Infix[{1, 2, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 2, 1}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"newpos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.554756133793426*^9, 3.554756214832426*^9, 
  3.554758653678192*^9}]
}, Open  ]],

Cell["There cannot be a winning move from the new position.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[newpos /. %, t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.5547561338314257`*^9, 3.554756214907426*^9, 
  3.554758653709195*^9}]
}, Open  ]],

Cell[TextData[{
 "Exhaustive search is a slow process. Even computing the winning move from \
position ",
 StyleBox["(3 4 5)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " takes many hours of computing time. Try this example out if you have a lot \
of patience and a fast computer."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Timing @ Query[ win[list[3, 4, 5], t_] ]\
\>", "Input",
 CellChangeTimes->{{3.554756166407426*^9, 3.5547561717694263`*^9}},
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"23.431`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"take", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5547561577764263`*^9, 3.554756197051426*^9, 
  3.554756238753426*^9, 3.554758677271551*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theorem Proving", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["This implication says that men are fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ fallible[x_], man[x_] ]", "Input",
 AspectRatioFixed->True],

Cell["Socrates is a man.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ man[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell["Therefore, he is fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ fallible[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output",
 CellChangeTimes->{3.5547561578574257`*^9, 3.5547562389744263`*^9, 
  3.5547586774775715`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Databases and Expert Systems", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["JurassicPark.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["The Database", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Main characters.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ dinosaur[Tyrannosaur] ]
Assert[ dinosaur[Velociraptor] ]
Assert[ dinosaur[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ human[Grant] ]
Assert[ human[Tim] ]
Assert[ human[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Dietary habits and other properties.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ carnivore[Tyrannosaur] ]
Assert[ carnivore[Velociraptor] ]
Assert[ carnivore[Tim] ]
Assert[ vegetarian[Brontosaur] ]
Assert[ vegetarian[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ veryBig[Tyrannosaur] ]
Assert[ veryBig[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Food values", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ plant[Tree] ]
Assert[ plant[Grass] ]
Assert[ meat[cow] ]
Assert[ meat[goat] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Derived Facts.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ meat[x_], dinosaur[x_] ]
Assert[ meat[x_], human[x_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Eating habits.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ eat[x_, y_], carnivore[x_], meat[y_], !veryBig[y_] ]
Assert[ eat[x_, y_], vegetarian[x_], plant[y_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Do vegetarians eat vegetarians?", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ eat[Brontosaur, Lex] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.5547561579484262`*^9, 3.554756239076426*^9, 
  3.5547586775635805`*^9}]
}, Open  ]],

Cell["The velociraptor's diet.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ eat[Velociraptor, y_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "cow"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.554758677593583*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "goat"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.5547586775945835`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Velociraptor"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.554758677597584*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Grant"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.554758677600584*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Tim"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.5547586776035843`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Lex"}], "}"}]], "Print",
 CellChangeTimes->{3.554756157973426*^9, 3.5547562391074257`*^9, 
  3.5547586776065845`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consistency Checks as Logic Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This consistency check ensures that we did not erroneously enter an item as \
both a dinosaur and a human.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_] && human[x_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.554756158010426*^9, 3.554756239162426*^9, 
  3.554758677639588*^9}]
}, Open  ]],

Cell["\<\
This query checks that all dinosaurs have been classified as either carnivore \
or vegetarian, that is, that our information is complete.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_], !(carnivore[x_] || vegetarian[x_]) ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output",
 CellChangeTimes->{3.5547561580344257`*^9, 3.554756239203426*^9, 
  3.554758677669591*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["REBCABIN\[CloseCurlyQuote]S NEW EXAMPLES", "Section",
 CellChangeTimes->{{3.554758030384469*^9, 3.5547580381506453`*^9}}],

Cell[CellGroupData[{

Cell["EXAMPL3.SPR", "Subsection",
 CellChangeTimes->{{3.554758563979223*^9, 3.554758568922717*^9}}],

Cell[TextData[{
 "Feraudy\[CloseCurlyQuote]s EXAMPL3.SPR transcribed into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellChangeTimes->{{3.554758044864317*^9, 3.554758060361866*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"seaWater", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"milk", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"ethanol", ",", "0.789"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"oliveOil", ",", "0.92"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Assert", "[", 
    RowBox[{"density", "[", 
     RowBox[{"petroleum", ",", "0.80"}], "]"}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"almondWood", ",", "0.99"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"apricotWood", ",", "0.89"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"appleWood", ",", "0.88"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"walnutWood", ",", "0.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"maple", ",", "0.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"poplar", ",", "0.45"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"balsa", ",", "0.12"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"iridium", ",", "22.64"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"lead", ",", "11.34"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"plutonium", ",", "19.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"copper", ",", "8.94"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"steel", ",", "7.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"mercury", ",", "13.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"gold", ",", "19.3"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"diamond", ",", "3.51"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"glass", ",", "2.5"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"sugar", ",", "1.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"fat", ",", "0.94"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.554758592478072*^9, 3.5547585952343483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"density", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.554758598821707*^9, 3.5547586115369782`*^9}, {
  3.554758797763599*^9, 3.554758798714694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "seaWater"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554758799446767*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "milk"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994477673`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "ethanol"}], ",", 
   RowBox[{"y", "\[Rule]", "0.789`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994507675`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "oliveOil"}], ",", 
   RowBox[{"y", "\[Rule]", "0.92`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994527683`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "petroleum"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554758799454768*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "almondWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.99`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554758799455768*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "apricotWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.89`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994577684`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "appleWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.88`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994597683`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "walnutWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554758799461769*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "maple"}], ",", 
   RowBox[{"y", "\[Rule]", "0.7`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994627686`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "poplar"}], ",", 
   RowBox[{"y", "\[Rule]", "0.45`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.554758799463769*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "balsa"}], ",", 
   RowBox[{"y", "\[Rule]", "0.12`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994647694`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "iridium"}], ",", 
   RowBox[{"y", "\[Rule]", "22.64`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994657693`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "lead"}], ",", 
   RowBox[{"y", "\[Rule]", "11.34`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994677696`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "plutonium"}], ",", 
   RowBox[{"y", "\[Rule]", "19.7`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994687696`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "copper"}], ",", 
   RowBox[{"y", "\[Rule]", "8.94`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994697695`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "steel"}], ",", 
   RowBox[{"y", "\[Rule]", "7.8`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.55475879947077*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "mercury"}], ",", 
   RowBox[{"y", "\[Rule]", "13.6`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.55475879947177*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "gold"}], ",", 
   RowBox[{"y", "\[Rule]", "19.3`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994727697`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "diamond"}], ",", 
   RowBox[{"y", "\[Rule]", "3.51`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.55475879947377*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "glass"}], ",", 
   RowBox[{"y", "\[Rule]", "2.5`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.55475879947477*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "sugar"}], ",", 
   RowBox[{"y", "\[Rule]", "1.6`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994767704`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "fat"}], ",", 
   RowBox[{"y", "\[Rule]", "0.94`"}]}], "}"}]], "Print",
 CellChangeTimes->{3.5547587994777703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"canFloatOnWater", "[", "thing_", "]"}], ",", " ", 
   RowBox[{"density", "[", 
    RowBox[{"thing_", ",", " ", "d_"}], "]"}], ",", " ", 
   RowBox[{"d_", " ", "<", " ", "1.0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5547604296597724`*^9, 3.5547604761374197`*^9}, 
   3.5547605371005154`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"canFloatOnWater", "[", "thing_", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5547604810519114`*^9, 3.5547604948632917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "ethanol"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390627117`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "oliveOil"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390637116`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "petroleum"}], "}"}]], "Print",
 CellChangeTimes->{3.554760539066712*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "almondWood"}], "}"}]], "Print",
 CellChangeTimes->{3.554760539068712*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "apricotWood"}], "}"}]], "Print",
 CellChangeTimes->{3.554760539069712*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "appleWood"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390717125`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "walnutWood"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390727124`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "maple"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390747128`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "poplar"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390757127`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "balsa"}], "}"}]], "Print",
 CellChangeTimes->{3.554760539077713*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "fat"}], "}"}]], "Print",
 CellChangeTimes->{3.5547605390787134`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Automatic,
WindowSize->{1262, 1510},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 113, 3, 98, "Title",
 Evaluatable->False],
Cell[695, 27, 111, 3, 35, "Subsubtitle",
 Evaluatable->False],
Cell[809, 32, 114, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[948, 38, 223, 5, 58, "Subtitle"],
Cell[1174, 45, 158, 3, 66, "Text"],
Cell[CellGroupData[{
Cell[1357, 52, 74, 2, 113, "Section",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[1456, 58, 76, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1535, 62, 88, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1660, 69, 77, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1740, 73, 77, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854, 80, 78, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1935, 84, 245, 6, 68, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2217, 95, 86, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[2306, 99, 65, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2408, 106, 80, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[2491, 110, 341, 8, 120, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2869, 123, 32, 0, 39, "Subsubsection"],
Cell[2904, 125, 132, 5, 43, "Text"],
Cell[3039, 132, 156, 7, 43, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3232, 144, 79, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[3314, 148, 290, 6, 68, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[3641, 159, 77, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[3721, 163, 242, 10, 43, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[4000, 178, 143, 6, 39, "Subsubsection",
 Evaluatable->False],
Cell[4146, 186, 65, 2, 42, "Text",
 Evaluatable->False],
Cell[4214, 190, 360, 12, 67, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4611, 207, 83, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[4697, 211, 161, 3, 58, "Input",
 Evaluatable->False],
Cell[4861, 216, 531, 12, 92, "Text"],
Cell[5395, 230, 490, 13, 194, "Text"],
Cell[5888, 245, 89, 2, 42, "Text",
 Evaluatable->False],
Cell[5980, 249, 131, 2, 58, "Input"],
Cell[6114, 253, 130, 2, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6293, 261, 70, 2, 113, "Section",
 Evaluatable->False],
Cell[6366, 265, 96, 2, 42, "Text"],
Cell[CellGroupData[{
Cell[6487, 271, 33, 0, 54, "Subsection"],
Cell[6523, 273, 303, 10, 70, "Text"],
Cell[6829, 285, 513, 13, 93, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7379, 303, 102, 3, 54, "Subsection",
 Evaluatable->False,
 InitializationCell->True],
Cell[7484, 308, 348, 11, 69, "Text",
 Evaluatable->False,
 InitializationCell->True],
Cell[7835, 321, 106, 2, 58, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7990, 329, 80, 2, 113, "Section",
 Evaluatable->False],
Cell[8073, 333, 213, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[8311, 345, 88, 2, 54, "Subsection",
 Evaluatable->False],
Cell[8402, 349, 161, 5, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8600, 359, 81, 2, 54, "Subsection",
 Evaluatable->False],
Cell[8684, 363, 148, 4, 81, "Input"],
Cell[8835, 369, 328, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[9188, 385, 85, 1, 58, "Input"],
Cell[9276, 388, 649, 15, 57, "Output"]
}, Open  ]],
Cell[9940, 406, 295, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10260, 422, 90, 1, 58, "Input"],
Cell[10353, 425, 535, 13, 57, "Output"]
}, Open  ]],
Cell[10903, 441, 215, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[11143, 453, 86, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[11254, 458, 726, 17, 32, "Print"],
Cell[11983, 477, 832, 20, 32, "Print"],
Cell[12818, 499, 951, 24, 32, "Print"],
Cell[13772, 525, 832, 20, 32, "Print"],
Cell[14607, 547, 724, 17, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15392, 571, 107, 3, 54, "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[CellGroupData[{
Cell[15524, 578, 84, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[15611, 582, 133, 4, 81, "Input"],
Cell[15747, 588, 258, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16030, 604, 78, 1, 58, "Input"],
Cell[16111, 607, 119, 2, 57, "Output"]
}, Open  ]],
Cell[16245, 612, 266, 9, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16536, 625, 79, 1, 58, "Input"],
Cell[16618, 628, 170, 4, 57, "Output"]
}, Open  ]],
Cell[16803, 635, 156, 5, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16984, 644, 82, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[17091, 649, 169, 4, 32, "Print"],
Cell[17263, 655, 167, 4, 32, "Print"],
Cell[17433, 661, 169, 4, 32, "Print"],
Cell[17605, 667, 167, 4, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17833, 678, 86, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[17922, 682, 148, 4, 81, "Input"],
Cell[18073, 688, 109, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[18207, 694, 83, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[18315, 699, 171, 4, 32, "Print"],
Cell[18489, 705, 171, 4, 32, "Print"],
Cell[18663, 711, 171, 4, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18895, 722, 107, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[19005, 726, 240, 6, 68, "Text",
 Evaluatable->False],
Cell[19248, 734, 142, 4, 81, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19451, 745, 113, 3, 113, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[19567, 750, 211, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[19803, 762, 88, 2, 54, "Subsection",
 Evaluatable->False],
Cell[19894, 766, 116, 2, 42, "Text",
 Evaluatable->False],
Cell[20013, 770, 243, 7, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20293, 782, 89, 2, 54, "Subsection",
 Evaluatable->False],
Cell[20385, 786, 264, 12, 261, "Input"],
Cell[20652, 800, 390, 16, 54, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[21067, 820, 80, 1, 58, "Input"],
Cell[21150, 823, 121, 2, 57, "Output"]
}, Open  ]],
Cell[21286, 828, 205, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[21516, 840, 77, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[21618, 845, 170, 4, 32, "Print"],
Cell[21791, 851, 169, 4, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[21987, 859, 352, 13, 54, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[22364, 876, 86, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[22475, 881, 268, 7, 32, "Print"],
Cell[22746, 890, 268, 7, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[23041, 901, 144, 4, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[23210, 909, 98, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[23333, 914, 565, 13, 32, "Print"],
Cell[23901, 929, 565, 13, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24539, 950, 99, 2, 113, "Section",
 Evaluatable->False],
Cell[24641, 954, 211, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[24877, 966, 85, 2, 54, "Subsection",
 Evaluatable->False],
Cell[24965, 970, 115, 2, 42, "Text",
 Evaluatable->False],
Cell[25083, 974, 101, 1, 58, "Input"],
Cell[25187, 977, 92, 2, 42, "Text",
 Evaluatable->False],
Cell[25282, 981, 71, 2, 42, "Text",
 Evaluatable->False],
Cell[25356, 985, 95, 1, 58, "Input"],
Cell[25454, 988, 71, 2, 42, "Text",
 Evaluatable->False],
Cell[25528, 992, 137, 4, 81, "Input"],
Cell[25668, 998, 101, 2, 42, "Text",
 Evaluatable->False],
Cell[25772, 1002, 226, 6, 126, "Input"],
Cell[26001, 1010, 84, 2, 42, "Text",
 Evaluatable->False],
Cell[26088, 1014, 168, 4, 81, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26293, 1023, 80, 2, 54, "Subsection",
 Evaluatable->False],
Cell[26376, 1027, 135, 4, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[26536, 1035, 87, 1, 58, "Input"],
Cell[26626, 1038, 485, 13, 57, "Output"]
}, Open  ]],
Cell[27126, 1054, 244, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[27395, 1066, 78, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[27498, 1071, 451, 13, 32, "Print"],
Cell[27952, 1086, 451, 13, 32, "Print"],
Cell[28406, 1101, 581, 17, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[29014, 1122, 269, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29308, 1138, 80, 1, 58, "Input"],
Cell[29391, 1141, 227, 6, 57, "Output"]
}, Open  ]],
Cell[29633, 1150, 287, 9, 69, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29945, 1163, 92, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[30062, 1168, 224, 6, 32, "Print"],
Cell[30289, 1176, 226, 6, 32, "Print"],
Cell[30518, 1184, 226, 6, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[30771, 1194, 420, 14, 70, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[31216, 1212, 68, 1, 58, "Input"],
Cell[31287, 1215, 118, 2, 57, "Output"]
}, Open  ]],
Cell[31420, 1220, 209, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[31654, 1232, 67, 1, 58, "Input"],
Cell[31724, 1235, 229, 6, 57, "Output"]
}, Open  ]],
Cell[31968, 1244, 361, 15, 43, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[32354, 1263, 70, 1, 58, "Input"],
Cell[32427, 1266, 120, 2, 57, "Output"]
}, Open  ]],
Cell[32562, 1271, 232, 9, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[32819, 1284, 130, 5, 103, "Input"],
Cell[32952, 1291, 950, 27, 57, "Output"]
}, Open  ]],
Cell[33917, 1321, 115, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34057, 1327, 71, 1, 58, "Input"],
Cell[34131, 1330, 120, 2, 57, "Output"]
}, Open  ]],
Cell[34266, 1335, 346, 10, 69, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34637, 1349, 158, 4, 58, "Input"],
Cell[34798, 1355, 308, 8, 57, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35167, 1370, 80, 2, 113, "Section",
 Evaluatable->False],
Cell[35250, 1374, 106, 2, 42, "Text",
 Evaluatable->False],
Cell[35359, 1378, 73, 1, 58, "Input"],
Cell[35435, 1381, 80, 2, 42, "Text",
 Evaluatable->False],
Cell[35518, 1385, 65, 1, 58, "Input"],
Cell[35586, 1388, 88, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[35699, 1394, 69, 1, 58, "Input"],
Cell[35771, 1397, 125, 2, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35945, 1405, 116, 3, 113, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[36064, 1410, 220, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[36309, 1422, 80, 2, 54, "Subsection",
 Evaluatable->False],
Cell[36392, 1426, 78, 2, 42, "Text",
 Evaluatable->False],
Cell[36473, 1430, 145, 5, 103, "Input"],
Cell[36621, 1437, 114, 5, 103, "Input"],
Cell[36738, 1444, 98, 2, 42, "Text",
 Evaluatable->False],
Cell[36839, 1448, 200, 7, 148, "Input"],
Cell[37042, 1457, 110, 4, 81, "Input"],
Cell[37155, 1463, 73, 2, 42, "Text",
 Evaluatable->False],
Cell[37231, 1467, 135, 6, 126, "Input"],
Cell[37369, 1475, 76, 2, 42, "Text",
 Evaluatable->False],
Cell[37448, 1479, 112, 4, 81, "Input"],
Cell[37563, 1485, 76, 2, 42, "Text",
 Evaluatable->False],
Cell[37642, 1489, 159, 4, 81, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37838, 1498, 82, 2, 54, "Subsection",
 Evaluatable->False],
Cell[37923, 1502, 93, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[38041, 1508, 71, 1, 58, "Input"],
Cell[38115, 1511, 122, 2, 57, "Output"]
}, Open  ]],
Cell[38252, 1516, 86, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[38363, 1522, 75, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[38463, 1527, 171, 4, 32, "Print"],
Cell[38637, 1533, 174, 4, 32, "Print"],
Cell[38814, 1539, 180, 4, 32, "Print"],
Cell[38997, 1545, 173, 4, 32, "Print"],
Cell[39173, 1551, 173, 4, 32, "Print"],
Cell[39349, 1557, 173, 4, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39583, 1568, 103, 2, 54, "Subsection",
 Evaluatable->False],
Cell[39689, 1572, 176, 5, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[39890, 1581, 76, 1, 58, "Input"],
Cell[39969, 1584, 118, 2, 57, "Output"]
}, Open  ]],
Cell[40102, 1589, 207, 5, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[40334, 1598, 99, 1, 58, "Input"],
Cell[40436, 1601, 120, 2, 57, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40617, 1610, 127, 1, 113, "Section"],
Cell[CellGroupData[{
Cell[40769, 1615, 99, 1, 54, "Subsection"],
Cell[40871, 1618, 208, 6, 43, "Text"],
Cell[41082, 1626, 3109, 95, 680, "Input"],
Cell[CellGroupData[{
Cell[44216, 1725, 238, 5, 58, "Input"],
Cell[CellGroupData[{
Cell[44479, 1734, 185, 5, 32, "Print"],
Cell[44667, 1741, 183, 5, 32, "Print"],
Cell[44853, 1748, 187, 5, 32, "Print"],
Cell[45043, 1755, 187, 5, 32, "Print"],
Cell[45233, 1762, 185, 5, 32, "Print"],
Cell[45421, 1769, 187, 5, 32, "Print"],
Cell[45611, 1776, 190, 5, 32, "Print"],
Cell[45804, 1783, 188, 5, 32, "Print"],
Cell[45995, 1790, 186, 5, 32, "Print"],
Cell[46184, 1797, 183, 5, 32, "Print"],
Cell[46370, 1804, 183, 5, 32, "Print"],
Cell[46556, 1811, 184, 5, 32, "Print"],
Cell[46743, 1818, 187, 5, 32, "Print"],
Cell[46933, 1825, 184, 5, 32, "Print"],
Cell[47120, 1832, 188, 5, 32, "Print"],
Cell[47311, 1839, 185, 5, 32, "Print"],
Cell[47499, 1846, 180, 5, 32, "Print"],
Cell[47682, 1853, 183, 5, 32, "Print"],
Cell[47868, 1860, 183, 5, 32, "Print"],
Cell[48054, 1867, 183, 5, 32, "Print"],
Cell[48240, 1874, 180, 5, 32, "Print"],
Cell[48423, 1881, 183, 5, 32, "Print"],
Cell[48609, 1888, 182, 5, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[48818, 1897, 356, 8, 58, "Input"],
Cell[CellGroupData[{
Cell[49199, 1909, 178, 3, 58, "Input"],
Cell[CellGroupData[{
Cell[49402, 1916, 132, 3, 32, "Print"],
Cell[49537, 1921, 133, 3, 32, "Print"],
Cell[49673, 1926, 132, 3, 32, "Print"],
Cell[49808, 1931, 133, 3, 32, "Print"],
Cell[49944, 1936, 134, 3, 32, "Print"],
Cell[50081, 1941, 134, 3, 32, "Print"],
Cell[50218, 1946, 135, 3, 32, "Print"],
Cell[50356, 1951, 130, 3, 32, "Print"],
Cell[50489, 1956, 131, 3, 32, "Print"],
Cell[50623, 1961, 128, 3, 32, "Print"],
Cell[50754, 1966, 128, 3, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
