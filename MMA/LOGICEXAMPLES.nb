(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    199633,       6393]
NotebookOptionsPosition[    183026,       5822]
NotebookOutlinePosition[    183790,       5848]
CellTagsIndexPosition[    183747,       5845]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Examples of Logic Programs", "Title",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["by Roman E. Maeder", "Subsubtitle",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["This Notebook contains the sample queries Chapter 2.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
UPDATED TO INCLUDE MATERIAL FROM http://rebcabin.wordpress.com\
\>", "Subtitle",
 CellChangeTimes->{{3.5547573714984694`*^9, 3.554757391592469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["23 Aug 2012", "Text",
 CellChangeTimes->{{3.554757395823469*^9, 3.554757399839469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell["Reference", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Title", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Examples of Logic Programs", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Roman E. Maeder", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Examples from the second column on logic programming. It uses the query \
evaluator developed in the first column to give examples of typical logic \
programming applications.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Version", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["1.2", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copyright", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["\[Copyright]",
  FontFamily->"Symbol"],
 " Copyright 1994, Roman E. Maeder.\n\nPermission is granted to distribute \
this file for any purpose except for inclusion in commercial software or \
program collections. This copyright notice must remain intact.."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["History", "Subsubsection"],

Cell[TextData[{
 "Version 1.2 for ",
 StyleBox["The Mathematica Programmer II",
  FontSlant->"Italic"],
 ", March 1996."
}], "Text"],

Cell[TextData[{
 "Version 1.0 for ",
 StyleBox["The Mathematica Journal ",
  FontSlant->"Italic"],
 StyleBox["4",
  FontWeight->"Bold"],
 "(1)."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Prolog, logic programming, lists, nondeterminism, finite automata, FSA, \
backtracking, NIM, games, theorem proving, predicate calculus, Horn clauses, \
satisfiability, expert systems, artificial intelligence, dinosaurs.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "    Maeder, Roman E.. 1994. Logic Programming II. ",
 StyleBox["The Mathematica Journal",
  FontSlant->"Italic"],
 ", ",
 StyleBox["4",
  FontWeight->"Bold"],
 "(2)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Version"
}], "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["3.0", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Updated to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " version 8.0.4 by ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ", 23 Aug 2012."
}], "Text",
 CellChangeTimes->{{3.554757416127469*^9, 3.554757440844469*^9}, {
  3.554757915615469*^9, 3.5547579398854694`*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Requirements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`LogicProgramming`*)", "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.554757998626469*^9, 3.5547580038734694`*^9}},
 AspectRatioFixed->True],

Cell[TextData[{
 "Requires ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote]s updated LOGICPROGRAMMING.M, or, just search for \
\[OpenCurlyDoubleQuote]closed world\[CloseCurlyDoubleQuote] and fix the \
following in the original (it\[CloseCurlyQuote]s a one-line fix)"
}], "Text",
 CellChangeTimes->{{3.554757446541469*^9, 3.554757470883469*^9}, {
  3.5547578647794695`*^9, 3.5547578691044693`*^9}, {3.554757952575469*^9, 
  3.554757963509469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["\<\
(* closed world *)

(* rebcabin 23 Aug 2012: The following line is reordered in recent versions \
of Mathematica *)
(* and will come before the meaty rules above.  Most queries will get a bogus \
 *)
(* \[OpenCurlyDoubleQuote]no\[CloseCurlyDoubleQuote].  It seems that \
commenting this out suffices to fix the problem. *)
(* qeval[ _, initialState ] := no *)\
\>", "Text",
 CellChangeTimes->{3.554757540101469*^9},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["Indirect through the above:", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`Unify`*)", "Input",
 CellChangeTimes->{{3.5547574825914693`*^9, 3.5547575000784693`*^9}},
 AspectRatioFixed->True],

Cell["(*MathProg`Lisp`*)", "Input",
 CellChangeTimes->{{3.5547574857414694`*^9, 3.5547575018264694`*^9}},
 AspectRatioFixed->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This section contains commands needed to load the corresponding package.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Search Path", "Subsection"],

Cell[TextData[{
 "Make sure that the directory containing the packages is on the search path, \
see the README document and the introduction in ",
 StyleBox["The ",
  FontSlant->"Italic"],
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 StyleBox[" Programmer",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[TextData[{
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ": a good place to put it in Windows is \
%USERPROFILE%\\AppData\\Roaming\\Mathematica\\Applications. On the mac, in \
~/Library/",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "/Applications. Put the entire MATHPROG folder in the Applications folder."
}], "Text",
 CellChangeTimes->{{3.554757614837469*^9, 3.5547576269724693`*^9}, {
  3.554757745567469*^9, 3.554757815547469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imports", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The code is contained in the following packages, which are simply read in \
here. The other packages listed in the requirements are read in indirectly \
from ",
 StyleBox["LogicProgramming.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["Needs[\"MathProg`LogicProgramming`\"]", "Input",
 InitializationCell->True,
 AspectRatioFixed->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lists in Prolog", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["Lists.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Ordering of Elements", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ ordered[list[]] ]
Assert[ ordered[list[_]] ]
Assert[ ordered[cons[e_, r_]], e_ < car[r_], ordered[r_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Lists", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ join[ nil, l_, l_ ] ]
Assert[ join[ cons[e_, r_], l_, cons[e_, s_] ], join[ r_, l_, s_ ] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query computes the join of ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["(c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ``returns'' the result as a binding for the one variable present."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], list[c, d], res_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"res", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
      " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query asks the question: ``which list, when joined to ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", gives ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "?''"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"l2", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`c, $CellContext`d}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query finds all possible ways to join two lists to give ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ join[l1_, l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", "\<\"()\"\>"}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "a", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`a, ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b"}],
       Infix[{$CellContext`a, $CellContext`b}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "d", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`d, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", "\<\"()\"\>"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Membership Tests", "Subsection",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["First Attempt", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member[e_, cons[e_, _]] ]
Assert[ member[e_, cons[_, r_]], member[e_, r_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "We find that ",
 StyleBox["a",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is indeed a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[a, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]],

Cell[TextData[{
 "It should no longer come as a surprise that we can invert the question to \
find an element that is a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Our program has a bug: elements that occur more than once are listed more \
than once.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unique Elements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member2[x_, cons[x_, l_]] ]
Assert[ member2[x_, cons[y_, l_]], member2[x_, l_], x_ != y_ ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Each element appearing is now listed only once.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member2[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simpler, but non-invertible Solution", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
If we give up the requirement that our code works both ways, we can find a \
simpler definition for testing membership using a cut as soon as an element \
has been found.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member1[x_, cons[x_, l_]], cut ]
Assert[ member1[x_, cons[_, l_]], member1[x_, l_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Nondeterministic Automata", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["FSA.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Automaton Simulation", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Evaluate this cell before trying out the exaple below.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ accepts[s_, nil], final[s_] ];
Assert[ accepts[s_, cons[x_, rest_]],
\ttrans[s_, x_, s1_], accepts[s1_, rest_] ];
Assert[ accepts[s_, input_],
\tsilent[s_, s1_], accepts[s1_, input_] ];\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["An Example Automaton.", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ final[s3] ];

Assert[ trans[s1, a, s1] ];
Assert[ trans[s1, a, s2] ];
Assert[ trans[s1, b, s1] ];
Assert[ trans[s2, b, s3] ];
Assert[ trans[s3, b, s4] ];

Assert[ silent[s2, s4] ];
Assert[ silent[s3, s1] ];\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query shows that the input ",
 StyleBox["aaab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ accepts[s1, list[a, a, a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here, we find all states from which the input ",
 StyleBox["ab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s_, list[a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s1"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s3"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Here are all inputs of length three that are accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s1, list[x1_, x2_, x3_]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "a"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "b"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If we want to see the accepting inputs as lists, we can do it in this way.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ input_ == list[_, _, _], accepts[s1, input_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"b", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Backtracking and Exhaustive Search", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["NIM.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Rules of the Game", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["We can win if the opponent cannot win after our move.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ win[pos_, t_],  play[pos_, t_, p1_], !win[p1_, _] ]", "Input",
 AspectRatioFixed->True],

Cell["Generation/Execution of moves.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Take all.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ play[ cons[n_, rest_], take[1, n_], rest_ ] ]", "Input",
 AspectRatioFixed->True],

Cell["Take one.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, 1], cons[n1_, rest_]],
\tn_ > 1, n1_ == n_ - 1 ] \
\>", "Input",
 AspectRatioFixed->True],

Cell["One more than a move with smaller heap.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, m_], cons[nr_, rest_]],
        n_ > 2, n1_ == n_-1,
        play[cons[n1_, rest_], take[1, m1_], cons[nr_, rest_]],
        m_ == m1_+1 ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Move in rest of heaps.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[i_, m_], cons[n_, rest1_]],
        play[rest_, take[j_, m_], rest1_], i_ == j_+1 ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Plays", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This performs a move by figuring out the position after the move.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[3, 4, 5], take[1, 2], p1_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"p1", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"1", "\<\" \"\>", "4", "\<\" \"\>", "5"}],
      Infix[{1, 4, 5}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{1, 4, 5}, " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all possible moves from position~",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and the resulting positions after the move."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2], t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "2", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 2, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "1", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 1, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Or we can ask for the move that transforms ",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " into ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[1, 2], t_, list[2]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all moves from ",
 StyleBox["(1 2 3)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that do not remove one of the heaps completely (we ask that the new \
position still has three heaps)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2, 3], t_, list[_, _, _]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "There is no move from the empty position. There is no rule expressing this \
fact, but you can check that all rules for ",
 StyleBox["play",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " require the initial position to be nonempty, since it is a pattern \
involving ",
 StyleBox["cons",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[nil, t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "This shows that we can win from position ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " by taking all chips."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[2], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The position ",
 StyleBox["(1 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is ",
 StyleBox["winning position",
  FontSlant->"Italic"],
 ", that is, if it is our turn we ",
 StyleBox["lose",
  FontSlant->"Italic"],
 " if the opponent plays correctly."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[1, 1], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query computes the winning move and the resulting position from \
position ",
 StyleBox["(1 2 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Query[ pos_==list[1,2,1],
       win[pos_, t_],
       play[pos_, t_, newpos_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "2", "\<\" \"\>", "1"}],
       Infix[{1, 2, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 2, 1}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"newpos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Output"]
}, Open  ]],

Cell["There cannot be a winning move from the new position.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[newpos /. %, t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Exhaustive search is a slow process. Even computing the winning move from \
position ",
 StyleBox["(3 4 5)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " takes many hours of computing time. Try this example out if you have a lot \
of patience and a fast computer."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This only takes 20 seconds on a modern computer nowadays (Maeder wrote the \
comment above in 1992 and it\[CloseCurlyQuote]s 2012 now). \
I\[CloseCurlyQuote]m commenting this out because we need to run this file \
multiple times and we don\[CloseCurlyQuote]t want to wait even 20 seconds for \
this. Uncomment it if you want to prove to yourself that it works.  \
\>", "Text",
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["(* Timing @ Query[ win[list[3, 4, 5], t_] ] *)", "Input",
 AspectRatioFixed->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Theorem Proving", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["This implication says that men are fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ fallible[x_], man[x_] ]", "Input",
 AspectRatioFixed->True],

Cell["Socrates is a man.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ man[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell["Therefore, he is fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ fallible[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Databases and Expert Systems", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["JurassicPark.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["The Database", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Main characters.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ dinosaur[Tyrannosaur] ]
Assert[ dinosaur[Velociraptor] ]
Assert[ dinosaur[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ human[Grant] ]
Assert[ human[Tim] ]
Assert[ human[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Dietary habits and other properties.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ carnivore[Tyrannosaur] ]
Assert[ carnivore[Velociraptor] ]
Assert[ carnivore[Tim] ]
Assert[ vegetarian[Brontosaur] ]
Assert[ vegetarian[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ veryBig[Tyrannosaur] ]
Assert[ veryBig[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Food values", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ plant[Tree] ]
Assert[ plant[Grass] ]
Assert[ meat[cow] ]
Assert[ meat[goat] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Derived Facts.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ meat[x_], dinosaur[x_] ]
Assert[ meat[x_], human[x_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Eating habits.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ eat[x_, y_], carnivore[x_], meat[y_], !veryBig[y_] ]
Assert[ eat[x_, y_], vegetarian[x_], plant[y_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Do vegetarians eat vegetarians?", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ eat[Brontosaur, Lex] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell["The velociraptor's diet.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ eat[Velociraptor, y_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "cow"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "goat"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Velociraptor"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Grant"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Tim"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Lex"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consistency Checks as Logic Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This consistency check ensures that we did not erroneously enter an item as \
both a dinosaur and a human.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_] && human[x_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell["\<\
This query checks that all dinosaurs have been classified as either carnivore \
or vegetarian, that is, that our information is complete.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_], !(carnivore[x_] || vegetarian[x_]) ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["REBCABIN\[CloseCurlyQuote]S NEW EXAMPLES", "Section",
 CellChangeTimes->{{3.554758030384469*^9, 3.5547580381506453`*^9}}],

Cell[CellGroupData[{

Cell["EXAMPL3.SPR", "Subsection",
 CellChangeTimes->{{3.554758563979223*^9, 3.554758568922717*^9}}],

Cell[TextData[{
 "Feraudy\[CloseCurlyQuote]s EXAMPL3.SPR transcribed into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellChangeTimes->{{3.554758044864317*^9, 3.554758060361866*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"seaWater", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"milk", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"ethanol", ",", "0.789"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"oliveOil", ",", "0.92"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Assert", "[", 
    RowBox[{"density", "[", 
     RowBox[{"petroleum", ",", "0.80"}], "]"}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"almondWood", ",", "0.99"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"apricotWood", ",", "0.89"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"appleWood", ",", "0.88"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"walnutWood", ",", "0.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"maple", ",", "0.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"poplar", ",", "0.45"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"balsa", ",", "0.12"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"iridium", ",", "22.64"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"lead", ",", "11.34"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"plutonium", ",", "19.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"copper", ",", "8.94"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"steel", ",", "7.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"mercury", ",", "13.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"gold", ",", "19.3"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"diamond", ",", "3.51"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"glass", ",", "2.5"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"sugar", ",", "1.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"fat", ",", "0.94"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.554758592478072*^9, 3.5547585952343483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"density", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.554758598821707*^9, 3.5547586115369782`*^9}, {
  3.554758797763599*^9, 3.554758798714694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "seaWater"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "milk"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "ethanol"}], ",", 
   RowBox[{"y", "\[Rule]", "0.789`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "oliveOil"}], ",", 
   RowBox[{"y", "\[Rule]", "0.92`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "petroleum"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "almondWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.99`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "apricotWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.89`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "appleWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.88`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "walnutWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "maple"}], ",", 
   RowBox[{"y", "\[Rule]", "0.7`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "poplar"}], ",", 
   RowBox[{"y", "\[Rule]", "0.45`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "balsa"}], ",", 
   RowBox[{"y", "\[Rule]", "0.12`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "iridium"}], ",", 
   RowBox[{"y", "\[Rule]", "22.64`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "lead"}], ",", 
   RowBox[{"y", "\[Rule]", "11.34`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "plutonium"}], ",", 
   RowBox[{"y", "\[Rule]", "19.7`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "copper"}], ",", 
   RowBox[{"y", "\[Rule]", "8.94`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "steel"}], ",", 
   RowBox[{"y", "\[Rule]", "7.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "mercury"}], ",", 
   RowBox[{"y", "\[Rule]", "13.6`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "gold"}], ",", 
   RowBox[{"y", "\[Rule]", "19.3`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "diamond"}], ",", 
   RowBox[{"y", "\[Rule]", "3.51`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "glass"}], ",", 
   RowBox[{"y", "\[Rule]", "2.5`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "sugar"}], ",", 
   RowBox[{"y", "\[Rule]", "1.6`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "fat"}], ",", 
   RowBox[{"y", "\[Rule]", "0.94`"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"waterSoluble", "[", "water", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"waterSoluble", "[", "seaWater", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"waterSoluble", "[", "sugar", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"waterSoluble", "[", "ethanol", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"waterSoluble", "[", "milk", "]"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"canFloatOnWater", "[", "thing_", "]"}], ",", " ", 
   RowBox[{"density", "[", 
    RowBox[{"thing_", ",", " ", "d_"}], "]"}], ",", " ", 
   RowBox[{"d_", " ", "<", " ", "1.0"}], ",", " ", 
   RowBox[{"not", "[", 
    RowBox[{"waterSoluble", "[", "thing_", "]"}], "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"canFloatOnWater", "[", "thing_", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5547604810519114`*^9, 3.5547604948632917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "oliveOil"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "petroleum"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "almondWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "apricotWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "appleWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "walnutWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "maple"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "poplar"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "balsa"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "fat"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Example 3 Recasted as a Join-Filter\
\>", "Subsection"],

Cell[TextData[{
 "First, capture the fact-base as lists of rewrite rules. We must choose \
final names for the properties. Prolog lets us create new variable names in \
every query; LINQ style requires us to choose property names for each of the \
attributes of a prologuish predicate. Remember that a predicate in Prolog is \
like a class in C#/LINQ and like a symbolic Head in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Let\[CloseCurlyQuote]s choose names for the properties / attributes to \
mimic the C#/LINQ solution."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Query", "[", 
  RowBox[{"density", "[", 
   RowBox[{"material_", ",", "value_"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"material", "\[Rule]", "seaWater"}], ",", 
   RowBox[{"value", "\[Rule]", "1.03`"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Query, here, functions like a combined call of GetEnumerator and MoveNext. \
Let\[CloseCurlyQuote]s define a function to harvest the results from a \
repeated Query (QueryAll just Prints them)\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"harvest", "[", "query_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Reap", "[", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "testVar", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"For", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"testVar", "=", 
         RowBox[{"Query", "[", "query", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"testVar", "=!=", "No"}], ",", "\[IndentingNewLine]", 
        RowBox[{"testVar", "=", 
         RowBox[{"Again", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Sow", "[", "testVar", "]"}]}], "]"}]}], "]"}], "]"}], " ", 
   "\[LeftDoubleBracket]", 
   RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densities", "[", "]"}], "=", 
  RowBox[{"harvest", "[", 
   RowBox[{"density", "[", 
    RowBox[{"material_", ",", "value_"}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "seaWater"}], ",", 
     RowBox[{"value", "\[Rule]", "1.03`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "milk"}], ",", 
     RowBox[{"value", "\[Rule]", "1.03`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "ethanol"}], ",", 
     RowBox[{"value", "\[Rule]", "0.789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "iridium"}], ",", 
     RowBox[{"value", "\[Rule]", "22.64`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "lead"}], ",", 
     RowBox[{"value", "\[Rule]", "11.34`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "plutonium"}], ",", 
     RowBox[{"value", "\[Rule]", "19.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "copper"}], ",", 
     RowBox[{"value", "\[Rule]", "8.94`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "steel"}], ",", 
     RowBox[{"value", "\[Rule]", "7.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "mercury"}], ",", 
     RowBox[{"value", "\[Rule]", "13.6`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "gold"}], ",", 
     RowBox[{"value", "\[Rule]", "19.3`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "diamond"}], ",", 
     RowBox[{"value", "\[Rule]", "3.51`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "glass"}], ",", 
     RowBox[{"value", "\[Rule]", "2.5`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "sugar"}], ",", 
     RowBox[{"value", "\[Rule]", "1.6`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densities", "[", "]"}], "//", "gridRules"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"seaWater"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"1.03`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"milk"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"1.03`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"ethanol"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.789`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"oliveOil"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.92`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"petroleum"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.8`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"almondWood"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.99`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"apricotWood"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.89`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"appleWood"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.88`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"walnutWood"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.8`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"maple"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.7`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"poplar"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.45`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"balsa"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.12`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"iridium"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"22.64`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"lead"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"11.34`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"plutonium"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"19.7`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"copper"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"8.94`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"steel"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"7.8`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"mercury"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"13.6`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"gold"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"19.3`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"diamond"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"3.51`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"glass"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"2.5`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"sugar"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"1.6`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"fat"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]},
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"value"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"0.94`"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   FrameStyle->RGBColor[0, 
     Rational[2, 3], 0],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"waterSolubles", "[", "]"}], "=", 
    RowBox[{"harvest", "[", 
     RowBox[{"waterSoluble", "[", "material_", "]"}], "]"}]}], ")"}], "//", 
  "gridRules"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"water"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"seaWater"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"sugar"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"ethanol"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"material"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontWeight->Bold,
              FontColor->GrayLevel[0]], 
             StyleBox[
              StyleBox[
               TagBox[GridBox[{
                  {"milk"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {{Left}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Grid"],
               StripOnInput->False,
               FontWeight->Bold],
              StripOnInput->False,
              LineColor->RGBColor[0, 0, 1],
              FrontFaceColor->RGBColor[0, 0, 1],
              BackFaceColor->RGBColor[0, 0, 1],
              GraphicsColor->RGBColor[0, 0, 1],
              FontWeight->Bold,
              FontColor->RGBColor[0, 0, 1]]}
           },
           AutoDelete->False,
           FrameStyle->RGBColor[0, 0, 1],
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxBackground->{"Columns" -> {
               RGBColor[1, 0.9, 0.8], {
                RGBColor[1, 1, 0.85]}}},
           GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]}
       },
       AutoDelete->False,
       FrameStyle->RGBColor[0, 
         Rational[2, 3], 0],
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{
            RGBColor[0.88, 1, 0.88]}}},
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   FrameStyle->RGBColor[0, 
     Rational[2, 3], 0],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s Select is LINQ\[CloseCurlyQuote]s ",
 StyleBox["Where",
  FontSlant->"Italic"],
 ". This is the first of a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " namespace of LINQ-ish operators we will build up:"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Linq`Where", "=", "Select"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Linq`Where", "[", 
  RowBox[{
   RowBox[{"densities", "[", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"value", "/.", "#"}], ")"}], "<", "1.0"}], "&"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "ethanol"}], ",", 
     RowBox[{"value", "\[Rule]", "0.789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Our original query, from Chapter 1 of the series, looks like this\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densities", "[", "]"}], "//", 
  RowBox[{
   RowBox[{"Linq`Where", "[", 
    RowBox[{"#", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"value", "/.", "#"}], ")"}], "<", "1.0"}], "&"}]}], "]"}], 
   "&"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "ethanol"}], ",", 
     RowBox[{"value", "\[Rule]", "0.789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s Map is LINQ\[CloseCurlyQuote]s Select, with the \
arguments in the opposite order (for postfix chaining):"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Linq`Select", "[", 
   RowBox[{"list_", ",", "projector_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"projector", ",", "list"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"densities", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "seaWater"}], ",", 
     RowBox[{"value", "\[Rule]", "1.03`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "milk"}], ",", 
     RowBox[{"value", "\[Rule]", "1.03`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "ethanol"}], ",", 
     RowBox[{"value", "\[Rule]", "0.789`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "iridium"}], ",", 
     RowBox[{"value", "\[Rule]", "22.64`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "lead"}], ",", 
     RowBox[{"value", "\[Rule]", "11.34`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "plutonium"}], ",", 
     RowBox[{"value", "\[Rule]", "19.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "copper"}], ",", 
     RowBox[{"value", "\[Rule]", "8.94`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "steel"}], ",", 
     RowBox[{"value", "\[Rule]", "7.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "mercury"}], ",", 
     RowBox[{"value", "\[Rule]", "13.6`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "gold"}], ",", 
     RowBox[{"value", "\[Rule]", "19.3`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "diamond"}], ",", 
     RowBox[{"value", "\[Rule]", "3.51`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "glass"}], ",", 
     RowBox[{"value", "\[Rule]", "2.5`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "sugar"}], ",", 
     RowBox[{"value", "\[Rule]", "1.6`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s MemberQ is LINQ\[CloseCurlyQuote]s Contains:  "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Linq`Contains", "=", "MemberQ"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"densities", "[", "]"}], " ", "//", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Linq`Where", "[", 
     RowBox[{"#", ",", 
      RowBox[{"d", "\[Function]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"value", "/.", "d"}], ")"}], "<", "1.0"}]}]}], "]"}], 
    "&"}]}], "//", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Linq`Where", "[", 
    RowBox[{"#", ",", 
     RowBox[{"d", "\[Function]", "\[IndentingNewLine]", 
      RowBox[{"Not", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"waterSolubles", "[", "]"}], "//", 
           RowBox[{
            RowBox[{"Linq`Select", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x", "\[Function]", 
               RowBox[{"material", "/.", "x"}]}]}], "]"}], "&"}]}], ")"}], "//",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Linq`Contains", "[", 
           RowBox[{"#", ",", 
            RowBox[{"material", "/.", "d"}]}], "]"}], "&"}]}], ")"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], "&"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"densities", "[", "]"}], " ", "//", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Linq`Where", "[", 
    RowBox[{"#", ",", 
     RowBox[{"d", "\[Function]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"value", "/.", "d"}], ")"}], "<", "1.0"}], "&&", 
       "\[IndentingNewLine]", 
       RowBox[{"Not", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"waterSolubles", "[", "]"}], "//", "\[IndentingNewLine]", 
            
            RowBox[{
             RowBox[{"Linq`Select", "[", 
              RowBox[{"#", ",", 
               RowBox[{"x", "\[Function]", 
                RowBox[{"material", "/.", "x"}]}]}], "]"}], "&"}]}], ")"}], "//",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Linq`Contains", "[", 
            RowBox[{"#", ",", 
             RowBox[{"material", "/.", "d"}]}], "]"}], "&"}]}], ")"}]}]}]}]}],
     "]"}], "&"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "oliveOil"}], ",", 
     RowBox[{"value", "\[Rule]", "0.92`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "petroleum"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "almondWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.99`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "apricotWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.89`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "appleWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "walnutWood"}], ",", 
     RowBox[{"value", "\[Rule]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "maple"}], ",", 
     RowBox[{"value", "\[Rule]", "0.7`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "poplar"}], ",", 
     RowBox[{"value", "\[Rule]", "0.45`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "balsa"}], ",", 
     RowBox[{"value", "\[Rule]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"material", "\[Rule]", "fat"}], ",", 
     RowBox[{"value", "\[Rule]", "0.94`"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EXAMPL4.SPR", "Subsection"],

Cell["\<\
We\[CloseCurlyQuote]re skipping exampl4 because it\[CloseCurlyQuote]s about \
IO in Prolog and not about logic programming.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["EXAMPL5.SPR", "Subsection"],

Cell[BoxData[
 RowBox[{"evaluate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"expression", "[", "e1_", "]"}], ",", 
    RowBox[{"operator", "[", "op_", "]"}], ",", 
    RowBox[{"expression", "[", "e2_", "]"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expression", "[", "n_Integer", "]"}], ":=", "n"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expression", "[", 
   RowBox[{"left_expression", ",", "op_operator", ",", "right_expression"}], 
   "]"}], ":=", "0"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
INITIALIZATION CELLS (UTILITIES)\
\>", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"gridRules", ",", "fopts"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "allAreRulesQ", ",", "noneAreAtomsQ", ",", "noneAreAtomsOrListsQ"}], 
    "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "A", " ", "\"\<HoldAll\>\"", " ", "version", " ", "of", " ", "the", " ", 
     "following"}], ",", 
    RowBox[{"with", " ", "\"\<Unevaluated\>\"", " ", "everywhere"}], ",", 
    RowBox[{"may", " ", "be", " ", 
     RowBox[{"required", "."}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"noneAreAtomsQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"AtomQ", "@", "#"}], "]"}], "&"}], "/@", "candidates"}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"noneAreAtomsOrListsQ", "[", "candidates_List", "]"}], ":=", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"AtomQ", "@", "#"}], "||", 
         RowBox[{"ListQ", "@", "#"}]}], "]"}], ")"}], "&"}], "/@", 
     "candidates"}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"allAreRulesQ", "[", "candidates_List", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"h", "=", 
           RowBox[{"Head", "@", "#"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"h", "===", "Rule"}], "||", 
          RowBox[{"h", "===", "RuleDelayed"}]}]}], "]"}], "&"}], "/@", 
      "candidates"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fopts", "[", 
    RowBox[{"fcolor_", ",", "bcolor_"}], "]"}], ":=", 
   RowBox[{"Sequence", "[", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "fcolor"}], ",", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightOrange", ",", 
         RowBox[{"{", "bcolor", "}"}]}], "}"}], "}"}]}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"Rule", "[", 
      RowBox[{"key_", ",", "val_"}], "]"}], "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "val"}], ",", "Bold", ",", "Blue"}], 
          "]"}]}], "}"}], "}"}], ",", 
      RowBox[{"fopts", "[", 
       RowBox[{"Blue", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"RuleDelayed", "[", 
      RowBox[{"key_", ",", "val_"}], "]"}], "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "key"}], ",", "Bold", ",", "Black"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "val"}], ",", "Bold", ",", "Red"}], 
          "]"}]}], "}"}], "}"}], ",", 
      RowBox[{"fopts", "[", 
       RowBox[{"Red", ",", "LightYellow"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Put", " ", "lists", " ", "of", " ", "non"}], "-", 
     RowBox[{
     "atoms", " ", "vertically", " ", "and", " ", "joinGrids", " ", "them", 
      " ", "up"}]}], ",", 
    RowBox[{"removing", " ", "one", " ", "level", " ", "of", " ", 
     RowBox[{"nesting", "."}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"exprs_List", "?", "noneAreAtomsOrListsQ"}], "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"joinGrids", "@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"gridRules", "/@", "exprs"}], "}"}]}]}], ")"}], ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
      RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Put", " ", "other", " ", "lists", " ", "vertically", " ", "but", " ", 
    RowBox[{"DON", "'"}], "T", " ", "joinGrids", " ", "them", " ", 
    RowBox[{"up", "."}]}], "*)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "exprs_List", "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"gridRules", "/@", "exprs"}], "}"}]}], ")"}], ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
      RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"h_", "[", "parts___", "]"}], "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"gridRules", "@", "h"}], ",", "Bold", ",", 
           RowBox[{"Darker", "[", "Purple", "]"}]}], "]"}], "}"}], "~", 
        "Join", "~", 
        RowBox[{"(", 
         RowBox[{"gridRules", "/@", 
          RowBox[{"{", "parts", "}"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"fopts", "[", 
       RowBox[{"Black", ",", "LightGreen"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", 
     RowBox[{"any_", "?", "AtomQ"}], "]"}], ":=", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "any", "}"}], "}"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", "Bold"}], 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gridRules", "[", "any_", "]"}], ":=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "any", "}"}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "joinGrids", "]"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Arbitrarily", " ", "choose", " ", "the", " ", "first", " ", "of", " ", 
     "multiple", " ", "option", " ", "tails", " ", "z1"}], ",", "z2", ",", 
    RowBox[{"...", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", 
      "k__"}], "}"}], "]"}], ":=", 
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], "}"}], ",", 
      "k"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "xs___", "]"}], "}"}], "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Grid", "[", "xs", "]"}], "}"}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
         "sty1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}]}], "}"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty1"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], ",", 
          "sty1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], "}"}], ",", 
       "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty1"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
         "sty2___"}], "]"}], "}"}]}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", "sty2"}],
       "]"}], "}"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "xs__", "}"}], ",", "z1___"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "ys__", "}"}], ",", "z2___"}], "]"}], ",", 
          "sty2___"}], "]"}], "}"}], ",", "k__"}], "}"}], "]"}], ":=", 
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xs", ",", "ys"}], "}"}], ",", "z1"}], "]"}], ",", 
          "sty2"}], "]"}], "}"}], ",", "k"}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"joinGrids", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", "xs___", "]"}], ",", "sty___"}], "]"}], "}"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Grid", "[", "xs", "]"}], ",", "sty"}], "]"}], "}"}], "}"}]}],
    ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"joinGrids", "[", 
    RowBox[{"{", "}"}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Automatic,
WindowSize->{1262, 1510},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 113, 3, 98, "Title",
 Evaluatable->False],
Cell[695, 27, 111, 3, 35, "Subsubtitle",
 Evaluatable->False],
Cell[809, 32, 114, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[948, 38, 223, 5, 58, "Subtitle"],
Cell[1174, 45, 158, 3, 66, "Text"],
Cell[CellGroupData[{
Cell[1357, 52, 74, 2, 113, "Section",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[1456, 58, 76, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1535, 62, 88, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1660, 69, 77, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1740, 73, 77, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854, 80, 78, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[1935, 84, 245, 6, 68, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2217, 95, 86, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[2306, 99, 65, 2, 42, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2408, 106, 80, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[2491, 110, 341, 8, 120, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2869, 123, 32, 0, 39, "Subsubsection"],
Cell[2904, 125, 132, 5, 43, "Text"],
Cell[3039, 132, 156, 7, 43, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3232, 144, 79, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[3314, 148, 290, 6, 68, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[3641, 159, 77, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[3721, 163, 242, 10, 43, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[4000, 178, 143, 6, 39, "Subsubsection",
 Evaluatable->False],
Cell[4146, 186, 65, 2, 42, "Text",
 Evaluatable->False],
Cell[4214, 190, 360, 12, 67, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4611, 207, 83, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[4697, 211, 161, 3, 58, "Input",
 Evaluatable->False],
Cell[4861, 216, 531, 12, 92, "Text"],
Cell[5395, 230, 490, 13, 194, "Text"],
Cell[5888, 245, 89, 2, 63, "Text",
 Evaluatable->False],
Cell[5980, 249, 131, 2, 87, "Input"],
Cell[6114, 253, 130, 2, 87, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6293, 261, 70, 2, 66, "Section",
 Evaluatable->False],
Cell[6366, 265, 96, 2, 42, "Text"],
Cell[CellGroupData[{
Cell[6487, 271, 33, 0, 54, "Subsection"],
Cell[6523, 273, 303, 10, 70, "Text"],
Cell[6829, 285, 513, 13, 93, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7379, 303, 102, 3, 54, "Subsection",
 Evaluatable->False,
 InitializationCell->True],
Cell[7484, 308, 348, 11, 69, "Text",
 Evaluatable->False,
 InitializationCell->True],
Cell[7835, 321, 106, 2, 58, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7990, 329, 80, 2, 66, "Section",
 Evaluatable->False],
Cell[8073, 333, 213, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[8311, 345, 88, 2, 54, "Subsection",
 Evaluatable->False],
Cell[8402, 349, 161, 5, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8600, 359, 81, 2, 54, "Subsection",
 Evaluatable->False],
Cell[8684, 363, 148, 4, 81, "Input"],
Cell[8835, 369, 328, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[9188, 385, 85, 1, 58, "Input"],
Cell[9276, 388, 538, 13, 57, "Output"]
}, Open  ]],
Cell[9829, 404, 295, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10149, 420, 90, 1, 58, "Input"],
Cell[10242, 423, 422, 11, 57, "Output"]
}, Open  ]],
Cell[10679, 437, 215, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10919, 449, 86, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[11030, 454, 611, 15, 32, "Print"],
Cell[11644, 471, 717, 18, 32, "Print"],
Cell[12364, 491, 836, 22, 32, "Print"],
Cell[13203, 515, 717, 18, 32, "Print"],
Cell[13923, 535, 611, 15, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14595, 557, 107, 3, 54, "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[CellGroupData[{
Cell[14727, 564, 84, 2, 39, "Subsubsection",
 Evaluatable->False],
Cell[14814, 568, 133, 4, 81, "Input"],
Cell[14950, 574, 258, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[15233, 590, 78, 1, 58, "Input"],
Cell[15314, 593, 30, 0, 57, "Output"]
}, Open  ]],
Cell[15359, 596, 266, 9, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[15650, 609, 79, 1, 58, "Input"],
Cell[15732, 612, 79, 2, 57, "Output"]
}, Open  ]],
Cell[15826, 617, 156, 5, 63, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16007, 626, 82, 1, 87, "Input"],
Cell[CellGroupData[{
Cell[16114, 631, 78, 2, 48, "Print"],
Cell[16195, 635, 78, 2, 48, "Print"],
Cell[16276, 639, 78, 2, 48, "Print"],
Cell[16357, 643, 78, 2, 48, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16496, 652, 86, 2, 58, "Subsubsection",
 Evaluatable->False],
Cell[16585, 656, 148, 4, 121, "Input"],
Cell[16736, 662, 109, 2, 63, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16870, 668, 83, 1, 87, "Input"],
Cell[CellGroupData[{
Cell[16978, 673, 78, 2, 48, "Print"],
Cell[17059, 677, 78, 2, 48, "Print"],
Cell[17140, 681, 78, 2, 48, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17279, 690, 107, 2, 58, "Subsubsection",
 Evaluatable->False],
Cell[17389, 694, 240, 6, 102, "Text",
 Evaluatable->False],
Cell[17632, 702, 142, 4, 121, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[17835, 713, 113, 3, 66, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[17951, 718, 211, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[18187, 730, 88, 2, 54, "Subsection",
 Evaluatable->False],
Cell[18278, 734, 116, 2, 42, "Text",
 Evaluatable->False],
Cell[18397, 738, 243, 7, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18677, 750, 89, 2, 54, "Subsection",
 Evaluatable->False],
Cell[18769, 754, 264, 12, 261, "Input"],
Cell[19036, 768, 390, 16, 54, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[19451, 788, 80, 1, 58, "Input"],
Cell[19534, 791, 30, 0, 57, "Output"]
}, Open  ]],
Cell[19579, 794, 205, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[19809, 806, 77, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[19911, 811, 79, 2, 32, "Print"],
Cell[19993, 815, 79, 2, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[20099, 821, 352, 13, 54, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[20476, 838, 86, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[20587, 843, 175, 5, 32, "Print"],
Cell[20765, 850, 175, 5, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[20967, 859, 144, 4, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[21136, 867, 98, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[21259, 872, 474, 11, 32, "Print"],
Cell[21736, 885, 474, 11, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22283, 904, 99, 2, 66, "Section",
 Evaluatable->False],
Cell[22385, 908, 211, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[22621, 920, 85, 2, 54, "Subsection",
 Evaluatable->False],
Cell[22709, 924, 115, 2, 42, "Text",
 Evaluatable->False],
Cell[22827, 928, 101, 1, 58, "Input"],
Cell[22931, 931, 92, 2, 42, "Text",
 Evaluatable->False],
Cell[23026, 935, 71, 2, 42, "Text",
 Evaluatable->False],
Cell[23100, 939, 95, 1, 58, "Input"],
Cell[23198, 942, 71, 2, 42, "Text",
 Evaluatable->False],
Cell[23272, 946, 137, 4, 81, "Input"],
Cell[23412, 952, 101, 2, 42, "Text",
 Evaluatable->False],
Cell[23516, 956, 226, 6, 126, "Input"],
Cell[23745, 964, 84, 2, 42, "Text",
 Evaluatable->False],
Cell[23832, 968, 168, 4, 81, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24037, 977, 80, 2, 54, "Subsection",
 Evaluatable->False],
Cell[24120, 981, 135, 4, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[24280, 989, 87, 1, 58, "Input"],
Cell[24370, 992, 394, 11, 57, "Output"]
}, Open  ]],
Cell[24779, 1006, 244, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[25048, 1018, 78, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[25151, 1023, 360, 11, 32, "Print"],
Cell[25514, 1036, 360, 11, 32, "Print"],
Cell[25877, 1049, 490, 15, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[26394, 1068, 269, 12, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[26688, 1084, 80, 1, 58, "Input"],
Cell[26771, 1087, 136, 4, 57, "Output"]
}, Open  ]],
Cell[26922, 1094, 287, 9, 69, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[27234, 1107, 92, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[27351, 1112, 135, 4, 32, "Print"],
Cell[27489, 1118, 135, 4, 32, "Print"],
Cell[27627, 1124, 135, 4, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[27789, 1132, 420, 14, 70, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[28234, 1150, 68, 1, 58, "Input"],
Cell[28305, 1153, 29, 0, 57, "Output"]
}, Open  ]],
Cell[28349, 1156, 209, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[28583, 1168, 67, 1, 58, "Input"],
Cell[28653, 1171, 136, 4, 57, "Output"]
}, Open  ]],
Cell[28804, 1178, 361, 15, 43, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[29190, 1197, 70, 1, 58, "Input"],
Cell[29263, 1200, 29, 0, 57, "Output"]
}, Open  ]],
Cell[29307, 1203, 232, 9, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29564, 1216, 130, 5, 103, "Input"],
Cell[29697, 1223, 861, 25, 57, "Output"]
}, Open  ]],
Cell[30573, 1251, 115, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[30713, 1257, 71, 1, 58, "Input"],
Cell[30787, 1260, 29, 0, 57, "Output"]
}, Open  ]],
Cell[30831, 1263, 346, 10, 69, "Text",
 Evaluatable->False],
Cell[31180, 1275, 451, 8, 117, "Text"],
Cell[31634, 1285, 88, 1, 58, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[31771, 1292, 80, 2, 66, "Section",
 Evaluatable->False],
Cell[31854, 1296, 106, 2, 42, "Text",
 Evaluatable->False],
Cell[31963, 1300, 73, 1, 58, "Input"],
Cell[32039, 1303, 80, 2, 42, "Text",
 Evaluatable->False],
Cell[32122, 1307, 65, 1, 58, "Input"],
Cell[32190, 1310, 88, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[32303, 1316, 69, 1, 58, "Input"],
Cell[32375, 1319, 30, 0, 57, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[32454, 1325, 116, 3, 66, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[32573, 1330, 220, 8, 43, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[32818, 1342, 80, 2, 54, "Subsection",
 Evaluatable->False],
Cell[32901, 1346, 78, 2, 42, "Text",
 Evaluatable->False],
Cell[32982, 1350, 145, 5, 103, "Input"],
Cell[33130, 1357, 114, 5, 103, "Input"],
Cell[33247, 1364, 98, 2, 42, "Text",
 Evaluatable->False],
Cell[33348, 1368, 200, 7, 148, "Input"],
Cell[33551, 1377, 110, 4, 81, "Input"],
Cell[33664, 1383, 73, 2, 42, "Text",
 Evaluatable->False],
Cell[33740, 1387, 135, 6, 126, "Input"],
Cell[33878, 1395, 76, 2, 42, "Text",
 Evaluatable->False],
Cell[33957, 1399, 112, 4, 81, "Input"],
Cell[34072, 1405, 76, 2, 42, "Text",
 Evaluatable->False],
Cell[34151, 1409, 159, 4, 81, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34347, 1418, 82, 2, 54, "Subsection",
 Evaluatable->False],
Cell[34432, 1422, 93, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34550, 1428, 71, 1, 58, "Input"],
Cell[34624, 1431, 29, 0, 57, "Output"]
}, Open  ]],
Cell[34668, 1434, 86, 2, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34779, 1440, 75, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[34879, 1445, 80, 2, 32, "Print"],
Cell[34962, 1449, 81, 2, 32, "Print"],
Cell[35046, 1453, 89, 2, 32, "Print"],
Cell[35138, 1457, 82, 2, 32, "Print"],
Cell[35223, 1461, 80, 2, 32, "Print"],
Cell[35306, 1465, 80, 2, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35447, 1474, 103, 2, 54, "Subsection",
 Evaluatable->False],
Cell[35553, 1478, 176, 5, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[35754, 1487, 76, 1, 58, "Input"],
Cell[35833, 1490, 29, 0, 57, "Output"]
}, Open  ]],
Cell[35877, 1493, 207, 5, 42, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[36109, 1502, 99, 1, 58, "Input"],
Cell[36211, 1505, 29, 0, 57, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36301, 1512, 127, 1, 66, "Section"],
Cell[CellGroupData[{
Cell[36453, 1517, 99, 1, 54, "Subsection"],
Cell[36555, 1520, 208, 6, 43, "Text"],
Cell[36766, 1528, 3109, 95, 680, "Input"],
Cell[CellGroupData[{
Cell[39900, 1627, 238, 5, 58, "Input"],
Cell[CellGroupData[{
Cell[40163, 1636, 143, 4, 32, "Print"],
Cell[40309, 1642, 139, 4, 32, "Print"],
Cell[40451, 1648, 143, 4, 32, "Print"],
Cell[40597, 1654, 143, 4, 32, "Print"],
Cell[40743, 1660, 143, 4, 32, "Print"],
Cell[40889, 1666, 145, 4, 32, "Print"],
Cell[41037, 1672, 146, 4, 32, "Print"],
Cell[41186, 1678, 144, 4, 32, "Print"],
Cell[41333, 1684, 144, 4, 32, "Print"],
Cell[41480, 1690, 139, 4, 32, "Print"],
Cell[41622, 1696, 141, 4, 32, "Print"],
Cell[41766, 1702, 140, 4, 32, "Print"],
Cell[41909, 1708, 143, 4, 32, "Print"],
Cell[42055, 1714, 140, 4, 32, "Print"],
Cell[42198, 1720, 144, 4, 32, "Print"],
Cell[42345, 1726, 141, 4, 32, "Print"],
Cell[42489, 1732, 139, 4, 32, "Print"],
Cell[42631, 1738, 142, 4, 32, "Print"],
Cell[42776, 1744, 139, 4, 32, "Print"],
Cell[42918, 1750, 142, 4, 32, "Print"],
Cell[43063, 1756, 139, 4, 32, "Print"],
Cell[43205, 1762, 139, 4, 32, "Print"],
Cell[43347, 1768, 138, 4, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[43512, 1776, 627, 19, 167, "Input"],
Cell[44142, 1797, 350, 8, 58, "Input"],
Cell[CellGroupData[{
Cell[44517, 1809, 178, 3, 58, "Input"],
Cell[CellGroupData[{
Cell[44720, 1816, 89, 2, 32, "Print"],
Cell[44812, 1820, 90, 2, 32, "Print"],
Cell[44905, 1824, 91, 2, 32, "Print"],
Cell[44999, 1828, 92, 2, 32, "Print"],
Cell[45094, 1832, 90, 2, 32, "Print"],
Cell[45187, 1836, 91, 2, 32, "Print"],
Cell[45281, 1840, 86, 2, 32, "Print"],
Cell[45370, 1844, 87, 2, 32, "Print"],
Cell[45460, 1848, 86, 2, 32, "Print"],
Cell[45549, 1852, 84, 2, 32, "Print"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[45694, 1861, 65, 2, 40, "Subsection"],
Cell[45762, 1865, 548, 10, 120, "Text"],
Cell[CellGroupData[{
Cell[46335, 1879, 129, 3, 58, "Input"],
Cell[46467, 1884, 155, 4, 57, "Output"]
}, Open  ]],
Cell[46637, 1891, 216, 4, 68, "Text"],
Cell[46856, 1897, 785, 17, 248, "Input"],
Cell[CellGroupData[{
Cell[47666, 1918, 187, 5, 58, "Input"],
Cell[47856, 1925, 3355, 94, 308, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51248, 2024, 89, 2, 58, "Input"],
Cell[51340, 2028, 89875, 2495, 1792, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141252, 4528, 231, 7, 58, "Input"],
Cell[141486, 4537, 12408, 345, 304, "Output"]
}, Open  ]],
Cell[153909, 4885, 311, 10, 43, "Text"],
Cell[154223, 4897, 81, 2, 58, "Input"],
Cell[CellGroupData[{
Cell[154329, 4903, 225, 8, 58, "Input"],
Cell[154557, 4913, 1641, 46, 158, "Output"]
}, Open  ]],
Cell[156213, 4962, 89, 2, 42, "Text"],
Cell[CellGroupData[{
Cell[156327, 4968, 278, 10, 58, "Input"],
Cell[156608, 4980, 1641, 46, 158, "Output"]
}, Open  ]],
Cell[158264, 5029, 205, 5, 43, "Text"],
Cell[158472, 5036, 190, 5, 58, "Input"],
Cell[CellGroupData[{
Cell[158687, 5045, 57, 1, 58, "Input"],
Cell[158747, 5048, 3355, 94, 308, "Output"]
}, Open  ]],
Cell[162117, 5145, 146, 4, 43, "Text"],
Cell[162266, 5151, 85, 2, 58, "Input"],
Cell[CellGroupData[{
Cell[162376, 5157, 1143, 32, 221, "Input"],
Cell[163522, 5191, 1496, 42, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165055, 5238, 1011, 29, 167, "Input"],
Cell[166069, 5269, 1496, 42, 158, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[167614, 5317, 33, 0, 40, "Subsection"],
Cell[167650, 5319, 147, 3, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167834, 5327, 33, 0, 54, "Subsection"],
Cell[167870, 5329, 239, 6, 58, "Input"],
Cell[168112, 5337, 95, 2, 58, "Input"],
Cell[168210, 5341, 164, 4, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168423, 5351, 59, 2, 113, "Section"],
Cell[168485, 5355, 14501, 462, 1679, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
