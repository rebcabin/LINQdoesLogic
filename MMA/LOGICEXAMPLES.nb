(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     59640,       2357]
NotebookOptionsPosition[     45019,       1847]
NotebookOutlinePosition[     45786,       1874]
CellTagsIndexPosition[     45743,       1871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Examples of Logic Programs", "Title",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["by Roman E. Maeder", "Subsubtitle",
 Evaluatable->False,
 TextAlignment->Center,
 AspectRatioFixed->True],

Cell["This Notebook contains the sample queries Chapter 2.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
UPDATED TO INCLUDE MATERIAL FROM http://rebcabin.wordpress.com\
\>", "Subtitle",
 CellChangeTimes->{{3.5547573714984694`*^9, 3.554757391592469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["23 Aug 2012", "Text",
 CellChangeTimes->{{3.554757395823469*^9, 3.554757399839469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell["Reference", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Title", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Examples of Logic Programs", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Roman E. Maeder", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Examples from the second column on logic programming. It uses the query \
evaluator developed in the first column to give examples of typical logic \
programming applications.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Package Version", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["1.2", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copyright", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["\[Copyright]",
  FontFamily->"Symbol"],
 " Copyright 1994, Roman E. Maeder.\n\nPermission is granted to distribute \
this file for any purpose except for inclusion in commercial software or \
program collections. This copyright notice must remain intact.."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["History", "Subsubsection"],

Cell[TextData[{
 "Version 1.2 for ",
 StyleBox["The Mathematica Programmer II",
  FontSlant->"Italic"],
 ", March 1996."
}], "Text"],

Cell[TextData[{
 "Version 1.0 for ",
 StyleBox["The Mathematica Journal ",
  FontSlant->"Italic"],
 StyleBox["4",
  FontWeight->"Bold"],
 "(1)."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Prolog, logic programming, lists, nondeterminism, finite automata, FSA, \
backtracking, NIM, games, theorem proving, predicate calculus, Horn clauses, \
satisfiability, expert systems, artificial intelligence, dinosaurs.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "    Maeder, Roman E.. 1994. Logic Programming II. ",
 StyleBox["The Mathematica Journal",
  FontSlant->"Italic"],
 ", ",
 StyleBox["4",
  FontWeight->"Bold"],
 "(2)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Version"
}], "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["3.0", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Updated to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " version 8.0.4 by ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ", 23 Aug 2012."
}], "Text",
 CellChangeTimes->{{3.554757416127469*^9, 3.554757440844469*^9}, {
  3.554757915615469*^9, 3.5547579398854694`*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Requirements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`LogicProgramming`*)", "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.554757998626469*^9, 3.5547580038734694`*^9}},
 AspectRatioFixed->True],

Cell[TextData[{
 "Requires ",
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote]s updated LOGICPROGRAMMING.M, or, just search for \
\[OpenCurlyDoubleQuote]closed world\[CloseCurlyDoubleQuote] and fix the \
following in the original (it\[CloseCurlyQuote]s a one-line fix)"
}], "Text",
 CellChangeTimes->{{3.554757446541469*^9, 3.554757470883469*^9}, {
  3.5547578647794695`*^9, 3.5547578691044693`*^9}, {3.554757952575469*^9, 
  3.554757963509469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["\<\
(* closed world *)

(* rebcabin 23 Aug 2012: The following line is reordered in recent versions \
of Mathematica *)
(* and will come before the meaty rules above.  Most queries will get a bogus \
 *)
(* \[OpenCurlyDoubleQuote]no\[CloseCurlyDoubleQuote].  It seems that \
commenting this out suffices to fix the problem. *)
(* qeval[ _, initialState ] := no *)\
\>", "Text",
 CellChangeTimes->{3.554757540101469*^9},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]],

Cell["Indirect through the above:", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["(*MathProg`Unify`*)", "Input",
 CellChangeTimes->{{3.5547574825914693`*^9, 3.5547575000784693`*^9}},
 AspectRatioFixed->True],

Cell["(*MathProg`Lisp`*)", "Input",
 CellChangeTimes->{{3.5547574857414694`*^9, 3.5547575018264694`*^9}},
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setup", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This section contains commands needed to load the corresponding package.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Search Path", "Subsection"],

Cell[TextData[{
 "Make sure that the directory containing the packages is on the search path, \
see the README document and the introduction in ",
 StyleBox["The ",
  FontSlant->"Italic"],
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 StyleBox[" Programmer",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[TextData[{
 StyleBox["rebcabin",
  FontWeight->"Bold"],
 ": a good place to put it in Windows is \
%USERPROFILE%\\AppData\\Roaming\\Mathematica\\Applications. On the mac, in \
~/Library/",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "/Applications. Put the entire MATHPROG folder in the Applications folder."
}], "Text",
 CellChangeTimes->{{3.554757614837469*^9, 3.5547576269724693`*^9}, {
  3.554757745567469*^9, 3.554757815547469*^9}},
 FontColor->RGBColor[0.5, 0, 0.5],
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Imports", "Subsection",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The code is contained in the following packages, which are simply read in \
here. The other packages listed in the requirements are read in indirectly \
from ",
 StyleBox["LogicProgramming.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 InitializationCell->True,
 AspectRatioFixed->True],

Cell["Needs[\"MathProg`LogicProgramming`\"]", "Input",
 InitializationCell->True,
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lists in Prolog", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["Lists.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Ordering of Elements", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ ordered[list[]] ]
Assert[ ordered[list[_]] ]
Assert[ ordered[cons[e_, r_]], e_ < car[r_], ordered[r_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Lists", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ join[ nil, l_, l_ ] ]
Assert[ join[ cons[e_, r_], l_, cons[e_, s_] ], join[ r_, l_, s_ ] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query computes the join of ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ",
 StyleBox["(c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and ``returns'' the result as a binding for the one variable present."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], list[c, d], res_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"res", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
      " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query asks the question: ``which list, when joined to ",
 StyleBox["(a b)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", gives ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "?''"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ join[list[a, b], l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"l2", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"c", "\<\" \"\>", "d"}],
      Infix[{$CellContext`c, $CellContext`d}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query finds all possible ways to join two lists to give ",
 StyleBox["(a b c d)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ join[l1_, l2_, list[a, b, c, d]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", "\<\"()\"\>"}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "a", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`a, ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`b, $CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b"}],
       Infix[{$CellContext`a, $CellContext`b}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`c, $CellContext`d}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`c, $CellContext`d}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "d", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", $CellContext`d, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"l1", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"a", "\<\" \"\>", "b", "\<\" \"\>", "c", "\<\" \"\>", "d"}],
       Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d},
         " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{$CellContext`a, $CellContext`b, $CellContext`c, $CellContext`d}, 
       " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"l2", "\[Rule]", "\<\"()\"\>"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Membership Tests", "Subsection",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["First Attempt", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member[e_, cons[e_, _]] ]
Assert[ member[e_, cons[_, r_]], member[e_, r_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "We find that ",
 StyleBox["a",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is indeed a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[a, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]],

Cell[TextData[{
 "It should no longer come as a surprise that we can invert the question to \
find an element that is a member of ",
 StyleBox["(a b c a)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Our program has a bug: elements that occur more than once are listed more \
than once.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unique Elements", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member2[x_, cons[x_, l_]] ]
Assert[ member2[x_, cons[y_, l_]], member2[x_, l_], x_ != y_ ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Each element appearing is now listed only once.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ member2[e_, list[a, b, c, a]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "a"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "b"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"e", "\[Rule]", "c"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simpler, but non-invertible Solution", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
If we give up the requirement that our code works both ways, we can find a \
simpler definition for testing membership using a cut as soon as an element \
has been found.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ member1[x_, cons[x_, l_]], cut ]
Assert[ member1[x_, cons[_, l_]], member1[x_, l_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nondeterministic Automata", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["FSA.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Automaton Simulation", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Evaluate this cell before trying out the exaple below.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ accepts[s_, nil], final[s_] ];
Assert[ accepts[s_, cons[x_, rest_]],
\ttrans[s_, x_, s1_], accepts[s1_, rest_] ];
Assert[ accepts[s_, input_],
\tsilent[s_, s1_], accepts[s1_, input_] ];\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["An Example Automaton.", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ final[s3] ];

Assert[ trans[s1, a, s1] ];
Assert[ trans[s1, a, s2] ];
Assert[ trans[s1, b, s1] ];
Assert[ trans[s2, b, s3] ];
Assert[ trans[s3, b, s4] ];

Assert[ silent[s2, s4] ];
Assert[ silent[s3, s1] ];\
\>", "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This query shows that the input ",
 StyleBox["aaab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ accepts[s1, list[a, a, a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here, we find all states from which the input ",
 StyleBox["ab",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is accepted."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s_, list[a, b]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s1"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s", "\[Rule]", "s3"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Here are all inputs of length three that are accepted from state ",
 StyleBox["s",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 StyleBox["1",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->"Subscript"}],
 "."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ accepts[s1, list[x1_, x2_, x3_]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "a"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", "\[Rule]", "b"}], ",", 
   RowBox[{"x2", "\[Rule]", "a"}], ",", 
   RowBox[{"x3", "\[Rule]", "b"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If we want to see the accepting inputs as lists, we can do it in this way.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ input_ == list[_, _, _], accepts[s1, input_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"a", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`a, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"input", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"b", "\<\" \"\>", "a", "\<\" \"\>", "b"}],
      Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{$CellContext`b, $CellContext`a, $CellContext`b}, " "], ")"],
    Editable->False]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Backtracking and Exhaustive Search", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["NIM.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Rules of the Game", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["We can win if the opponent cannot win after our move.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ win[pos_, t_],  play[pos_, t_, p1_], !win[p1_, _] ]", "Input",
 AspectRatioFixed->True],

Cell["Generation/Execution of moves.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Take all.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ play[ cons[n_, rest_], take[1, n_], rest_ ] ]", "Input",
 AspectRatioFixed->True],

Cell["Take one.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, 1], cons[n1_, rest_]],
\tn_ > 1, n1_ == n_ - 1 ] \
\>", "Input",
 AspectRatioFixed->True],

Cell["One more than a move with smaller heap.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[1, m_], cons[nr_, rest_]],
        n_ > 2, n1_ == n_-1,
        play[cons[n1_, rest_], take[1, m1_], cons[nr_, rest_]],
        m_ == m1_+1 ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Move in rest of heaps.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ play[cons[n_, rest_], take[i_, m_], cons[n_, rest1_]],
        play[rest_, take[j_, m_], rest1_], i_ == j_+1 ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Plays", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This performs a move by figuring out the position after the move.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[3, 4, 5], take[1, 2], p1_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"p1", "\[Rule]", 
   InterpretationBox[
    RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
     InterpretationBox[
      RowBox[{"1", "\<\" \"\>", "4", "\<\" \"\>", "5"}],
      Infix[{1, 4, 5}, " "],
      Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
    SequenceForm["(", 
     Infix[{1, 4, 5}, " "], ")"],
    Editable->False]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all possible moves from position~",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and the resulting positions after the move."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2], t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "2", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 2, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", "1", 
      "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 1, ")"],
     Editable->False]}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], ",", 
   RowBox[{"p", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Or we can ask for the move that transforms ",
 StyleBox["(1 2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " into ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[list[1, 2], t_, list[2]] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Here is a list of all moves from ",
 StyleBox["(1 2 3)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that do not remove one of the heaps completely (we ask that the new \
position still has three heaps)."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ play[list[1, 2, 3], t_, list[_, _, _]] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "1"}], "]"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"3", ",", "2"}], "]"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "There is no move from the empty position. There is no rule expressing this \
fact, but you can check that all rules for ",
 StyleBox["play",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " require the initial position to be nonempty, since it is a pattern \
involving ",
 StyleBox["cons",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ play[nil, t_, p_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "This shows that we can win from position ",
 StyleBox["(2)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " by taking all chips."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[2], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"t", "\[Rule]", 
   RowBox[{"take", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The position ",
 StyleBox["(1 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is ",
 StyleBox["winning position",
  FontSlant->"Italic"],
 ", that is, if it is our turn we ",
 StyleBox["lose",
  FontSlant->"Italic"],
 " if the opponent plays correctly."
}], "Text",
 Evaluatable->False,
 PageBreakBelow->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[list[1, 1], t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "This query computes the winning move and the resulting position from \
position ",
 StyleBox["(1 2 1)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Query[ pos_==list[1,2,1],
       win[pos_, t_],
       play[pos_, t_, newpos_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "2", "\<\" \"\>", "1"}],
       Infix[{1, 2, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 2, 1}, " "], ")"],
     Editable->False]}], ",", 
   RowBox[{"t", "\[Rule]", 
    RowBox[{"take", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], ",", 
   RowBox[{"newpos", "\[Rule]", 
    InterpretationBox[
     RowBox[{"\<\"(\"\>", "\[InvisibleSpace]", 
      InterpretationBox[
       RowBox[{"1", "\<\" \"\>", "1"}],
       Infix[{1, 1}, " "],
       Editable->False], "\[InvisibleSpace]", "\<\")\"\>"}],
     SequenceForm["(", 
      Infix[{1, 1}, " "], ")"],
     Editable->False]}]}], "}"}]], "Output"]
}, Open  ]],

Cell["There cannot be a winning move from the new position.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ win[newpos /. %, t_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Exhaustive search is a slow process. Even computing the winning move from \
position ",
 StyleBox["(3 4 5)",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " takes many hours of computing time. Try this example out if you have a lot \
of patience and a fast computer."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Timing @ Query[ win[list[3, 4, 5], t_] ]", "Input",
 CellChangeTimes->{{3.554756166407426*^9, 3.5547561717694263`*^9}},
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20.492909`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"take", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theorem Proving", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["This implication says that men are fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ fallible[x_], man[x_] ]", "Input",
 AspectRatioFixed->True],

Cell["Socrates is a man.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Assert[ man[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell["Therefore, he is fallible.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ fallible[Socrates] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["Yes"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Databases and Expert Systems", "Section",
 Evaluatable->False,
 PageBreakAbove->True,
 AspectRatioFixed->True],

Cell[TextData[{
 "The rules from this section can be found also in the package ",
 StyleBox["JurassicPark.m",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["The Database", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Main characters.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ dinosaur[Tyrannosaur] ]
Assert[ dinosaur[Velociraptor] ]
Assert[ dinosaur[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ human[Grant] ]
Assert[ human[Tim] ]
Assert[ human[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Dietary habits and other properties.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ carnivore[Tyrannosaur] ]
Assert[ carnivore[Velociraptor] ]
Assert[ carnivore[Tim] ]
Assert[ vegetarian[Brontosaur] ]
Assert[ vegetarian[Lex] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["\<\
Assert[ veryBig[Tyrannosaur] ]
Assert[ veryBig[Brontosaur] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Food values", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ plant[Tree] ]
Assert[ plant[Grass] ]
Assert[ meat[cow] ]
Assert[ meat[goat] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Derived Facts.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ meat[x_], dinosaur[x_] ]
Assert[ meat[x_], human[x_] ]\
\>", "Input",
 AspectRatioFixed->True],

Cell["Eating habits.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Assert[ eat[x_, y_], carnivore[x_], meat[y_], !veryBig[y_] ]
Assert[ eat[x_, y_], vegetarian[x_], plant[y_] ]\
\>", "Input",
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Do vegetarians eat vegetarians?", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ eat[Brontosaur, Lex] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell["The velociraptor's diet.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["QueryAll[ eat[Velociraptor, y_] ]", "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "cow"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "goat"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Velociraptor"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Grant"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Tim"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"y", "\[Rule]", "Lex"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consistency Checks as Logic Queries", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
This consistency check ensures that we did not erroneously enter an item as \
both a dinosaur and a human.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_] && human[x_] ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]],

Cell["\<\
This query checks that all dinosaurs have been classified as either carnivore \
or vegetarian, that is, that our information is complete.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Query[ dinosaur[x_], !(carnivore[x_] || vegetarian[x_]) ]", "Input",
 AspectRatioFixed->True],

Cell[BoxData["No"], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["REBCABIN\[CloseCurlyQuote]S NEW EXAMPLES", "Section",
 CellChangeTimes->{{3.554758030384469*^9, 3.5547580381506453`*^9}}],

Cell[CellGroupData[{

Cell["EXAMPL3.SPR", "Subsection",
 CellChangeTimes->{{3.554758563979223*^9, 3.554758568922717*^9}}],

Cell[TextData[{
 "Feraudy\[CloseCurlyQuote]s EXAMPL3.SPR transcribed into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " "
}], "Text",
 CellChangeTimes->{{3.554758044864317*^9, 3.554758060361866*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"seaWater", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"milk", ",", "1.03"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"ethanol", ",", "0.789"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"oliveOil", ",", "0.92"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Assert", "[", 
    RowBox[{"density", "[", 
     RowBox[{"petroleum", ",", "0.80"}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"almondWood", ",", "0.99"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"apricotWood", ",", "0.89"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"appleWood", ",", "0.88"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"walnutWood", ",", "0.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"maple", ",", "0.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"poplar", ",", "0.45"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"balsa", ",", "0.12"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"iridium", ",", "22.64"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"lead", ",", "11.34"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"plutonium", ",", "19.7"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"copper", ",", "8.94"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"steel", ",", "7.8"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"mercury", ",", "13.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"gold", ",", "19.3"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"diamond", ",", "3.51"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"glass", ",", "2.5"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"sugar", ",", "1.6"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"density", "[", 
    RowBox[{"fat", ",", "0.94"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.554758592478072*^9, 3.5547585952343483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"density", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.554758598821707*^9, 3.5547586115369782`*^9}, {
  3.554758797763599*^9, 3.554758798714694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "seaWater"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "milk"}], ",", 
   RowBox[{"y", "\[Rule]", "1.03`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "ethanol"}], ",", 
   RowBox[{"y", "\[Rule]", "0.789`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "oliveOil"}], ",", 
   RowBox[{"y", "\[Rule]", "0.92`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "petroleum"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "almondWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.99`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "apricotWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.89`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "appleWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.88`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "walnutWood"}], ",", 
   RowBox[{"y", "\[Rule]", "0.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "maple"}], ",", 
   RowBox[{"y", "\[Rule]", "0.7`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "poplar"}], ",", 
   RowBox[{"y", "\[Rule]", "0.45`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "balsa"}], ",", 
   RowBox[{"y", "\[Rule]", "0.12`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "iridium"}], ",", 
   RowBox[{"y", "\[Rule]", "22.64`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "lead"}], ",", 
   RowBox[{"y", "\[Rule]", "11.34`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "plutonium"}], ",", 
   RowBox[{"y", "\[Rule]", "19.7`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "copper"}], ",", 
   RowBox[{"y", "\[Rule]", "8.94`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "steel"}], ",", 
   RowBox[{"y", "\[Rule]", "7.8`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "mercury"}], ",", 
   RowBox[{"y", "\[Rule]", "13.6`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "gold"}], ",", 
   RowBox[{"y", "\[Rule]", "19.3`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "diamond"}], ",", 
   RowBox[{"y", "\[Rule]", "3.51`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "glass"}], ",", 
   RowBox[{"y", "\[Rule]", "2.5`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "sugar"}], ",", 
   RowBox[{"y", "\[Rule]", "1.6`"}]}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "fat"}], ",", 
   RowBox[{"y", "\[Rule]", "0.94`"}]}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Assert", "[", 
  RowBox[{
   RowBox[{"canFloatOnWater", "[", "thing_", "]"}], ",", " ", 
   RowBox[{"density", "[", 
    RowBox[{"thing_", ",", " ", "d_"}], "]"}], ",", " ", 
   RowBox[{"d_", " ", "<", " ", "1.0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5547604296597724`*^9, 3.5547604761374197`*^9}, 
   3.5547605371005154`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QueryAll", "[", 
  RowBox[{"canFloatOnWater", "[", "thing_", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5547604810519114`*^9, 3.5547604948632917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "ethanol"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "oliveOil"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "petroleum"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "almondWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "apricotWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "appleWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "walnutWood"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "maple"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "poplar"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "balsa"}], "}"}]], "Print"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"thing", "\[Rule]", "fat"}], "}"}]], "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Automatic,
WindowSize->{1262, 852},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 22, \
2012)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 113, 3, 90, "Title",
 Evaluatable->False],
Cell[695, 27, 111, 3, 31, "Subsubtitle",
 Evaluatable->False],
Cell[809, 32, 114, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[948, 38, 223, 5, 55, "Subtitle"],
Cell[1174, 45, 158, 3, 63, "Text"],
Cell[CellGroupData[{
Cell[1357, 52, 74, 2, 108, "Section",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[1456, 58, 76, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[1535, 62, 88, 2, 39, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1660, 69, 77, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[1740, 73, 77, 2, 39, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854, 80, 78, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[1935, 84, 245, 6, 62, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2217, 95, 86, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[2306, 99, 65, 2, 39, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2408, 106, 80, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[2491, 110, 341, 8, 108, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[2869, 123, 32, 0, 36, "Subsubsection"],
Cell[2904, 125, 132, 5, 39, "Text"],
Cell[3039, 132, 156, 7, 39, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3232, 144, 79, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[3314, 148, 290, 6, 62, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[3641, 159, 77, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[3721, 163, 242, 10, 39, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[4000, 178, 143, 6, 36, "Subsubsection",
 Evaluatable->False],
Cell[4146, 186, 65, 2, 39, "Text",
 Evaluatable->False],
Cell[4214, 190, 360, 12, 63, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4611, 207, 83, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[4697, 211, 161, 3, 55, "Input",
 Evaluatable->False],
Cell[4861, 216, 531, 12, 86, "Text"],
Cell[5395, 230, 490, 13, 176, "Text"],
Cell[5888, 245, 89, 2, 39, "Text",
 Evaluatable->False],
Cell[5980, 249, 131, 2, 55, "Input"],
Cell[6114, 253, 130, 2, 55, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6293, 261, 70, 2, 108, "Section",
 Evaluatable->False],
Cell[6366, 265, 96, 2, 39, "Text"],
Cell[CellGroupData[{
Cell[6487, 271, 33, 0, 51, "Subsection"],
Cell[6523, 273, 303, 10, 62, "Text"],
Cell[6829, 285, 513, 13, 86, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7379, 303, 102, 3, 51, "Subsection",
 Evaluatable->False,
 InitializationCell->True],
Cell[7484, 308, 348, 11, 62, "Text",
 Evaluatable->False,
 InitializationCell->True],
Cell[7835, 321, 106, 2, 55, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7990, 329, 80, 2, 108, "Section",
 Evaluatable->False],
Cell[8073, 333, 213, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[8311, 345, 88, 2, 51, "Subsection",
 Evaluatable->False],
Cell[8402, 349, 161, 5, 94, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8600, 359, 81, 2, 51, "Subsection",
 Evaluatable->False],
Cell[8684, 363, 148, 4, 75, "Input"],
Cell[8835, 369, 328, 12, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[9188, 385, 85, 1, 55, "Input"],
Cell[9276, 388, 538, 13, 55, "Output"]
}, Open  ]],
Cell[9829, 404, 295, 12, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10149, 420, 90, 1, 55, "Input"],
Cell[10242, 423, 422, 11, 55, "Output"]
}, Open  ]],
Cell[10679, 437, 215, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[10919, 449, 86, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[11030, 454, 611, 15, 30, "Print"],
Cell[11644, 471, 717, 18, 30, "Print"],
Cell[12364, 491, 836, 22, 30, "Print"],
Cell[13203, 515, 717, 18, 30, "Print"],
Cell[13923, 535, 611, 15, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14595, 557, 107, 3, 51, "Subsection",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[CellGroupData[{
Cell[14727, 564, 84, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[14814, 568, 133, 4, 75, "Input"],
Cell[14950, 574, 258, 12, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[15233, 590, 78, 1, 55, "Input"],
Cell[15314, 593, 30, 0, 55, "Output"]
}, Open  ]],
Cell[15359, 596, 266, 9, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[15650, 609, 79, 1, 55, "Input"],
Cell[15732, 612, 79, 2, 55, "Output"]
}, Open  ]],
Cell[15826, 617, 156, 5, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16007, 626, 82, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[16114, 631, 78, 2, 30, "Print"],
Cell[16195, 635, 78, 2, 30, "Print"],
Cell[16276, 639, 78, 2, 30, "Print"],
Cell[16357, 643, 78, 2, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16496, 652, 86, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[16585, 656, 148, 4, 75, "Input"],
Cell[16736, 662, 109, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[16870, 668, 83, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[16978, 673, 78, 2, 30, "Print"],
Cell[17059, 677, 78, 2, 30, "Print"],
Cell[17140, 681, 78, 2, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17279, 690, 107, 2, 36, "Subsubsection",
 Evaluatable->False],
Cell[17389, 694, 240, 6, 62, "Text",
 Evaluatable->False],
Cell[17632, 702, 142, 4, 75, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17835, 713, 113, 3, 108, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[17951, 718, 211, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[18187, 730, 88, 2, 51, "Subsection",
 Evaluatable->False],
Cell[18278, 734, 116, 2, 39, "Text",
 Evaluatable->False],
Cell[18397, 738, 243, 7, 133, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18677, 750, 89, 2, 51, "Subsection",
 Evaluatable->False],
Cell[18769, 754, 264, 12, 231, "Input"],
Cell[19036, 768, 390, 16, 51, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[19451, 788, 80, 1, 55, "Input"],
Cell[19534, 791, 30, 0, 55, "Output"]
}, Open  ]],
Cell[19579, 794, 205, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[19809, 806, 77, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[19911, 811, 79, 2, 30, "Print"],
Cell[19993, 815, 79, 2, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[20099, 821, 352, 13, 51, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[20476, 838, 86, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[20587, 843, 175, 5, 30, "Print"],
Cell[20765, 850, 175, 5, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[20967, 859, 144, 4, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[21136, 867, 98, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[21259, 872, 474, 11, 30, "Print"],
Cell[21736, 885, 474, 11, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22283, 904, 99, 2, 108, "Section",
 Evaluatable->False],
Cell[22385, 908, 211, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[22621, 920, 85, 2, 51, "Subsection",
 Evaluatable->False],
Cell[22709, 924, 115, 2, 39, "Text",
 Evaluatable->False],
Cell[22827, 928, 101, 1, 55, "Input"],
Cell[22931, 931, 92, 2, 39, "Text",
 Evaluatable->False],
Cell[23026, 935, 71, 2, 39, "Text",
 Evaluatable->False],
Cell[23100, 939, 95, 1, 55, "Input"],
Cell[23198, 942, 71, 2, 39, "Text",
 Evaluatable->False],
Cell[23272, 946, 137, 4, 75, "Input"],
Cell[23412, 952, 101, 2, 39, "Text",
 Evaluatable->False],
Cell[23516, 956, 226, 6, 114, "Input"],
Cell[23745, 964, 84, 2, 39, "Text",
 Evaluatable->False],
Cell[23832, 968, 168, 4, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24037, 977, 80, 2, 51, "Subsection",
 Evaluatable->False],
Cell[24120, 981, 135, 4, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[24280, 989, 87, 1, 55, "Input"],
Cell[24370, 992, 394, 11, 55, "Output"]
}, Open  ]],
Cell[24779, 1006, 244, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[25048, 1018, 78, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[25151, 1023, 360, 11, 30, "Print"],
Cell[25514, 1036, 360, 11, 30, "Print"],
Cell[25877, 1049, 490, 15, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[26394, 1068, 269, 12, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[26688, 1084, 80, 1, 55, "Input"],
Cell[26771, 1087, 136, 4, 55, "Output"]
}, Open  ]],
Cell[26922, 1094, 287, 9, 62, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[27234, 1107, 92, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[27351, 1112, 135, 4, 30, "Print"],
Cell[27489, 1118, 135, 4, 30, "Print"],
Cell[27627, 1124, 135, 4, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[27789, 1132, 420, 14, 62, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[28234, 1150, 68, 1, 55, "Input"],
Cell[28305, 1153, 29, 0, 55, "Output"]
}, Open  ]],
Cell[28349, 1156, 209, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[28583, 1168, 67, 1, 55, "Input"],
Cell[28653, 1171, 136, 4, 55, "Output"]
}, Open  ]],
Cell[28804, 1178, 361, 15, 39, "Text",
 Evaluatable->False,
 PageBreakBelow->False],
Cell[CellGroupData[{
Cell[29190, 1197, 70, 1, 55, "Input"],
Cell[29263, 1200, 29, 0, 55, "Output"]
}, Open  ]],
Cell[29307, 1203, 232, 9, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29564, 1216, 130, 5, 94, "Input"],
Cell[29697, 1223, 861, 25, 55, "Output"]
}, Open  ]],
Cell[30573, 1251, 115, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[30713, 1257, 71, 1, 55, "Input"],
Cell[30787, 1260, 29, 0, 55, "Output"]
}, Open  ]],
Cell[30831, 1263, 346, 10, 62, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[31202, 1277, 150, 2, 55, "Input"],
Cell[31355, 1281, 198, 6, 55, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31614, 1294, 80, 2, 108, "Section",
 Evaluatable->False],
Cell[31697, 1298, 106, 2, 39, "Text",
 Evaluatable->False],
Cell[31806, 1302, 73, 1, 55, "Input"],
Cell[31882, 1305, 80, 2, 39, "Text",
 Evaluatable->False],
Cell[31965, 1309, 65, 1, 55, "Input"],
Cell[32033, 1312, 88, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[32146, 1318, 69, 1, 55, "Input"],
Cell[32218, 1321, 30, 0, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32297, 1327, 116, 3, 108, "Section",
 Evaluatable->False,
 PageBreakAbove->True],
Cell[32416, 1332, 220, 8, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[32661, 1344, 80, 2, 51, "Subsection",
 Evaluatable->False],
Cell[32744, 1348, 78, 2, 39, "Text",
 Evaluatable->False],
Cell[32825, 1352, 145, 5, 94, "Input"],
Cell[32973, 1359, 114, 5, 94, "Input"],
Cell[33090, 1366, 98, 2, 39, "Text",
 Evaluatable->False],
Cell[33191, 1370, 200, 7, 133, "Input"],
Cell[33394, 1379, 110, 4, 75, "Input"],
Cell[33507, 1385, 73, 2, 39, "Text",
 Evaluatable->False],
Cell[33583, 1389, 135, 6, 114, "Input"],
Cell[33721, 1397, 76, 2, 39, "Text",
 Evaluatable->False],
Cell[33800, 1401, 112, 4, 75, "Input"],
Cell[33915, 1407, 76, 2, 39, "Text",
 Evaluatable->False],
Cell[33994, 1411, 159, 4, 75, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34190, 1420, 82, 2, 51, "Subsection",
 Evaluatable->False],
Cell[34275, 1424, 93, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34393, 1430, 71, 1, 55, "Input"],
Cell[34467, 1433, 29, 0, 55, "Output"]
}, Open  ]],
Cell[34511, 1436, 86, 2, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[34622, 1442, 75, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[34722, 1447, 80, 2, 30, "Print"],
Cell[34805, 1451, 81, 2, 30, "Print"],
Cell[34889, 1455, 89, 2, 30, "Print"],
Cell[34981, 1459, 82, 2, 30, "Print"],
Cell[35066, 1463, 80, 2, 30, "Print"],
Cell[35149, 1467, 80, 2, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35290, 1476, 103, 2, 51, "Subsection",
 Evaluatable->False],
Cell[35396, 1480, 176, 5, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[35597, 1489, 76, 1, 55, "Input"],
Cell[35676, 1492, 29, 0, 55, "Output"]
}, Open  ]],
Cell[35720, 1495, 207, 5, 39, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[35952, 1504, 99, 1, 55, "Input"],
Cell[36054, 1507, 29, 0, 55, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36144, 1514, 127, 1, 108, "Section"],
Cell[CellGroupData[{
Cell[36296, 1519, 99, 1, 51, "Subsection"],
Cell[36398, 1522, 208, 6, 39, "Text"],
Cell[36609, 1530, 3109, 95, 585, "Input"],
Cell[CellGroupData[{
Cell[39743, 1629, 238, 5, 57, "Input"],
Cell[CellGroupData[{
Cell[40006, 1638, 143, 4, 30, "Print"],
Cell[40152, 1644, 139, 4, 30, "Print"],
Cell[40294, 1650, 143, 4, 30, "Print"],
Cell[40440, 1656, 143, 4, 30, "Print"],
Cell[40586, 1662, 143, 4, 30, "Print"],
Cell[40732, 1668, 145, 4, 30, "Print"],
Cell[40880, 1674, 146, 4, 30, "Print"],
Cell[41029, 1680, 144, 4, 30, "Print"],
Cell[41176, 1686, 144, 4, 30, "Print"],
Cell[41323, 1692, 139, 4, 30, "Print"],
Cell[41465, 1698, 141, 4, 30, "Print"],
Cell[41609, 1704, 140, 4, 30, "Print"],
Cell[41752, 1710, 143, 4, 30, "Print"],
Cell[41898, 1716, 140, 4, 30, "Print"],
Cell[42041, 1722, 144, 4, 30, "Print"],
Cell[42188, 1728, 141, 4, 30, "Print"],
Cell[42332, 1734, 139, 4, 30, "Print"],
Cell[42474, 1740, 142, 4, 30, "Print"],
Cell[42619, 1746, 139, 4, 30, "Print"],
Cell[42761, 1752, 142, 4, 30, "Print"],
Cell[42906, 1758, 139, 4, 30, "Print"],
Cell[43048, 1764, 139, 4, 30, "Print"],
Cell[43190, 1770, 138, 4, 30, "Print"]
}, Open  ]]
}, Open  ]],
Cell[43355, 1778, 356, 8, 57, "Input"],
Cell[CellGroupData[{
Cell[43736, 1790, 178, 3, 57, "Input"],
Cell[CellGroupData[{
Cell[43939, 1797, 88, 2, 30, "Print"],
Cell[44030, 1801, 89, 2, 30, "Print"],
Cell[44122, 1805, 90, 2, 30, "Print"],
Cell[44215, 1809, 91, 2, 30, "Print"],
Cell[44309, 1813, 92, 2, 30, "Print"],
Cell[44404, 1817, 90, 2, 30, "Print"],
Cell[44497, 1821, 91, 2, 30, "Print"],
Cell[44591, 1825, 86, 2, 30, "Print"],
Cell[44680, 1829, 87, 2, 30, "Print"],
Cell[44770, 1833, 86, 2, 30, "Print"],
Cell[44859, 1837, 84, 2, 30, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
